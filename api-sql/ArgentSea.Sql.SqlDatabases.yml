### YamlMime:ManagedReference
items:
- uid: ArgentSea.Sql.SqlDatabases
  commentId: T:ArgentSea.Sql.SqlDatabases
  id: SqlDatabases
  parent: ArgentSea.Sql
  children:
  - ArgentSea.Sql.SqlDatabases.#ctor(Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlDbConnectionOptions},Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions},Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions},Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlDatabases})
  langs:
  - csharp
  - vb
  name: SqlDatabases
  nameWithType: SqlDatabases
  fullName: ArgentSea.Sql.SqlDatabases
  type: Class
  source:
    remote:
      path: src/SqlDatabases.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: SqlDatabases
    path: ../ArgentSea.Sql/src/SqlDatabases.cs
    startLine: 8
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nThis class manages the non-sharded SQL database connections.\n"
  example: []
  syntax:
    content: 'public class SqlDatabases : Databases<SqlDbConnectionOptions>, ICollection, IEnumerable'
    content.vb: >-
      Public Class SqlDatabases

          Inherits Databases(Of SqlDbConnectionOptions)

          Implements ICollection, IEnumerable
  inheritance:
  - System.Object
  - ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.Item(System.String)
  - ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.Count
  - ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.IsSynchronized
  - ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.SyncRoot
  - ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.CopyTo(System.Array,System.Int32)
  - ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.GetEnumerator
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ArgentSea.Sql.SqlDatabases.#ctor(Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlDbConnectionOptions},Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions},Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions},Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlDatabases})
  commentId: M:ArgentSea.Sql.SqlDatabases.#ctor(Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlDbConnectionOptions},Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions},Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions},Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlDatabases})
  id: '#ctor(Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlDbConnectionOptions},Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions},Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions},Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlDatabases})'
  parent: ArgentSea.Sql.SqlDatabases
  langs:
  - csharp
  - vb
  name: SqlDatabases(IOptions<SqlDbConnectionOptions>, IOptions<DataSecurityOptions>, IOptions<DataResilienceOptions>, ILogger<SqlDatabases>)
  nameWithType: SqlDatabases.SqlDatabases(IOptions<SqlDbConnectionOptions>, IOptions<DataSecurityOptions>, IOptions<DataResilienceOptions>, ILogger<SqlDatabases>)
  fullName: ArgentSea.Sql.SqlDatabases.SqlDatabases(Microsoft.Extensions.Options.IOptions<ArgentSea.Sql.SqlDbConnectionOptions>, Microsoft.Extensions.Options.IOptions<ArgentSea.DataSecurityOptions>, Microsoft.Extensions.Options.IOptions<ArgentSea.DataResilienceOptions>, Microsoft.Extensions.Logging.ILogger<ArgentSea.Sql.SqlDatabases>)
  type: Constructor
  source:
    remote:
      path: src/SqlDatabases.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: .ctor
    path: ../ArgentSea.Sql/src/SqlDatabases.cs
    startLine: 10
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  syntax:
    content: public SqlDatabases(IOptions<SqlDbConnectionOptions> configOptions, IOptions<DataSecurityOptions> securityOptions, IOptions<DataResilienceOptions> resilienceStrategiesOptions, ILogger<SqlDatabases> logger)
    parameters:
    - id: configOptions
      type: Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlDbConnectionOptions}
    - id: securityOptions
      type: Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions}
    - id: resilienceStrategiesOptions
      type: Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions}
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlDatabases}
    content.vb: Public Sub New(configOptions As IOptions(Of SqlDbConnectionOptions), securityOptions As IOptions(Of DataSecurityOptions), resilienceStrategiesOptions As IOptions(Of DataResilienceOptions), logger As ILogger(Of SqlDatabases))
  overload: ArgentSea.Sql.SqlDatabases.#ctor*
  nameWithType.vb: SqlDatabases.SqlDatabases(IOptions(Of SqlDbConnectionOptions), IOptions(Of DataSecurityOptions), IOptions(Of DataResilienceOptions), ILogger(Of SqlDatabases))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ArgentSea.Sql.SqlDatabases.SqlDatabases(Microsoft.Extensions.Options.IOptions(Of ArgentSea.Sql.SqlDbConnectionOptions), Microsoft.Extensions.Options.IOptions(Of ArgentSea.DataSecurityOptions), Microsoft.Extensions.Options.IOptions(Of ArgentSea.DataResilienceOptions), Microsoft.Extensions.Logging.ILogger(Of ArgentSea.Sql.SqlDatabases))
  name.vb: SqlDatabases(IOptions(Of SqlDbConnectionOptions), IOptions(Of DataSecurityOptions), IOptions(Of DataResilienceOptions), ILogger(Of SqlDatabases))
references:
- uid: ArgentSea.Sql
  commentId: N:ArgentSea.Sql
  name: ArgentSea.Sql
  nameWithType: ArgentSea.Sql
  fullName: ArgentSea.Sql
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}
  commentId: T:ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}
  parent: ArgentSea
  definition: ArgentSea.Databases`1
  name: Databases<SqlDbConnectionOptions>
  nameWithType: Databases<SqlDbConnectionOptions>
  fullName: ArgentSea.Databases<ArgentSea.Sql.SqlDbConnectionOptions>
  nameWithType.vb: Databases(Of SqlDbConnectionOptions)
  fullName.vb: ArgentSea.Databases(Of ArgentSea.Sql.SqlDbConnectionOptions)
  name.vb: Databases(Of SqlDbConnectionOptions)
  spec.csharp:
  - uid: ArgentSea.Databases`1
    name: Databases
    nameWithType: Databases
    fullName: ArgentSea.Databases
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArgentSea.Sql.SqlDbConnectionOptions
    name: SqlDbConnectionOptions
    nameWithType: SqlDbConnectionOptions
    fullName: ArgentSea.Sql.SqlDbConnectionOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArgentSea.Databases`1
    name: Databases
    nameWithType: Databases
    fullName: ArgentSea.Databases
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArgentSea.Sql.SqlDbConnectionOptions
    name: SqlDbConnectionOptions
    nameWithType: SqlDbConnectionOptions
    fullName: ArgentSea.Sql.SqlDbConnectionOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.Item(System.String)
  commentId: P:ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.Item(System.String)
  parent: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}
  definition: ArgentSea.Databases`1.Item(System.String)
  name: Item[String]
  nameWithType: Databases<SqlDbConnectionOptions>.Item[String]
  fullName: ArgentSea.Databases<ArgentSea.Sql.SqlDbConnectionOptions>.Item[System.String]
  nameWithType.vb: Databases(Of SqlDbConnectionOptions).Item(String)
  fullName.vb: ArgentSea.Databases(Of ArgentSea.Sql.SqlDbConnectionOptions).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: ArgentSea.Databases`1.Item(System.String)
    name: Item
    nameWithType: Databases<SqlDbConnectionOptions>.Item
    fullName: ArgentSea.Databases<ArgentSea.Sql.SqlDbConnectionOptions>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: ArgentSea.Databases`1.Item(System.String)
    name: Item
    nameWithType: Databases(Of SqlDbConnectionOptions).Item
    fullName: ArgentSea.Databases(Of ArgentSea.Sql.SqlDbConnectionOptions).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.Count
  commentId: P:ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.Count
  parent: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}
  definition: ArgentSea.Databases`1.Count
  name: Count
  nameWithType: Databases<SqlDbConnectionOptions>.Count
  fullName: ArgentSea.Databases<ArgentSea.Sql.SqlDbConnectionOptions>.Count
  nameWithType.vb: Databases(Of SqlDbConnectionOptions).Count
  fullName.vb: ArgentSea.Databases(Of ArgentSea.Sql.SqlDbConnectionOptions).Count
- uid: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.IsSynchronized
  commentId: P:ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.IsSynchronized
  parent: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}
  definition: ArgentSea.Databases`1.IsSynchronized
  name: IsSynchronized
  nameWithType: Databases<SqlDbConnectionOptions>.IsSynchronized
  fullName: ArgentSea.Databases<ArgentSea.Sql.SqlDbConnectionOptions>.IsSynchronized
  nameWithType.vb: Databases(Of SqlDbConnectionOptions).IsSynchronized
  fullName.vb: ArgentSea.Databases(Of ArgentSea.Sql.SqlDbConnectionOptions).IsSynchronized
- uid: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.SyncRoot
  commentId: P:ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.SyncRoot
  parent: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}
  definition: ArgentSea.Databases`1.SyncRoot
  name: SyncRoot
  nameWithType: Databases<SqlDbConnectionOptions>.SyncRoot
  fullName: ArgentSea.Databases<ArgentSea.Sql.SqlDbConnectionOptions>.SyncRoot
  nameWithType.vb: Databases(Of SqlDbConnectionOptions).SyncRoot
  fullName.vb: ArgentSea.Databases(Of ArgentSea.Sql.SqlDbConnectionOptions).SyncRoot
- uid: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.CopyTo(System.Array,System.Int32)
  commentId: M:ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.CopyTo(System.Array,System.Int32)
  parent: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}
  definition: ArgentSea.Databases`1.CopyTo(System.Array,System.Int32)
  name: CopyTo(Array, Int32)
  nameWithType: Databases<SqlDbConnectionOptions>.CopyTo(Array, Int32)
  fullName: ArgentSea.Databases<ArgentSea.Sql.SqlDbConnectionOptions>.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Databases(Of SqlDbConnectionOptions).CopyTo(Array, Int32)
  fullName.vb: ArgentSea.Databases(Of ArgentSea.Sql.SqlDbConnectionOptions).CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: ArgentSea.Databases`1.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: Databases<SqlDbConnectionOptions>.CopyTo
    fullName: ArgentSea.Databases<ArgentSea.Sql.SqlDbConnectionOptions>.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ArgentSea.Databases`1.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: Databases(Of SqlDbConnectionOptions).CopyTo
    fullName: ArgentSea.Databases(Of ArgentSea.Sql.SqlDbConnectionOptions).CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.GetEnumerator
  commentId: M:ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}.GetEnumerator
  parent: ArgentSea.Databases{ArgentSea.Sql.SqlDbConnectionOptions}
  definition: ArgentSea.Databases`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Databases<SqlDbConnectionOptions>.GetEnumerator()
  fullName: ArgentSea.Databases<ArgentSea.Sql.SqlDbConnectionOptions>.GetEnumerator()
  nameWithType.vb: Databases(Of SqlDbConnectionOptions).GetEnumerator()
  fullName.vb: ArgentSea.Databases(Of ArgentSea.Sql.SqlDbConnectionOptions).GetEnumerator()
  spec.csharp:
  - uid: ArgentSea.Databases`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Databases<SqlDbConnectionOptions>.GetEnumerator
    fullName: ArgentSea.Databases<ArgentSea.Sql.SqlDbConnectionOptions>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ArgentSea.Databases`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Databases(Of SqlDbConnectionOptions).GetEnumerator
    fullName: ArgentSea.Databases(Of ArgentSea.Sql.SqlDbConnectionOptions).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ArgentSea.Databases`1
  commentId: T:ArgentSea.Databases`1
  name: Databases<TConfiguration>
  nameWithType: Databases<TConfiguration>
  fullName: ArgentSea.Databases<TConfiguration>
  nameWithType.vb: Databases(Of TConfiguration)
  fullName.vb: ArgentSea.Databases(Of TConfiguration)
  name.vb: Databases(Of TConfiguration)
  spec.csharp:
  - uid: ArgentSea.Databases`1
    name: Databases
    nameWithType: Databases
    fullName: ArgentSea.Databases
  - name: <
    nameWithType: <
    fullName: <
  - name: TConfiguration
    nameWithType: TConfiguration
    fullName: TConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArgentSea.Databases`1
    name: Databases
    nameWithType: Databases
    fullName: ArgentSea.Databases
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TConfiguration
    nameWithType: TConfiguration
    fullName: TConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea
  commentId: N:ArgentSea
  name: ArgentSea
  nameWithType: ArgentSea
  fullName: ArgentSea
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
- uid: ArgentSea.Databases`1.Item(System.String)
  commentId: P:ArgentSea.Databases`1.Item(System.String)
  isExternal: true
  name: Item[String]
  nameWithType: Databases<TConfiguration>.Item[String]
  fullName: ArgentSea.Databases<TConfiguration>.Item[System.String]
  nameWithType.vb: Databases(Of TConfiguration).Item(String)
  fullName.vb: ArgentSea.Databases(Of TConfiguration).Item(System.String)
  name.vb: Item(String)
  spec.csharp:
  - uid: ArgentSea.Databases`1.Item(System.String)
    name: Item
    nameWithType: Databases<TConfiguration>.Item
    fullName: ArgentSea.Databases<TConfiguration>.Item
  - name: '['
    nameWithType: '['
    fullName: '['
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ']'
    nameWithType: ']'
    fullName: ']'
  spec.vb:
  - uid: ArgentSea.Databases`1.Item(System.String)
    name: Item
    nameWithType: Databases(Of TConfiguration).Item
    fullName: ArgentSea.Databases(Of TConfiguration).Item
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea.Databases`1.Count
  commentId: P:ArgentSea.Databases`1.Count
  name: Count
  nameWithType: Databases<TConfiguration>.Count
  fullName: ArgentSea.Databases<TConfiguration>.Count
  nameWithType.vb: Databases(Of TConfiguration).Count
  fullName.vb: ArgentSea.Databases(Of TConfiguration).Count
- uid: ArgentSea.Databases`1.IsSynchronized
  commentId: P:ArgentSea.Databases`1.IsSynchronized
  name: IsSynchronized
  nameWithType: Databases<TConfiguration>.IsSynchronized
  fullName: ArgentSea.Databases<TConfiguration>.IsSynchronized
  nameWithType.vb: Databases(Of TConfiguration).IsSynchronized
  fullName.vb: ArgentSea.Databases(Of TConfiguration).IsSynchronized
- uid: ArgentSea.Databases`1.SyncRoot
  commentId: P:ArgentSea.Databases`1.SyncRoot
  name: SyncRoot
  nameWithType: Databases<TConfiguration>.SyncRoot
  fullName: ArgentSea.Databases<TConfiguration>.SyncRoot
  nameWithType.vb: Databases(Of TConfiguration).SyncRoot
  fullName.vb: ArgentSea.Databases(Of TConfiguration).SyncRoot
- uid: ArgentSea.Databases`1.CopyTo(System.Array,System.Int32)
  commentId: M:ArgentSea.Databases`1.CopyTo(System.Array,System.Int32)
  isExternal: true
  name: CopyTo(Array, Int32)
  nameWithType: Databases<TConfiguration>.CopyTo(Array, Int32)
  fullName: ArgentSea.Databases<TConfiguration>.CopyTo(System.Array, System.Int32)
  nameWithType.vb: Databases(Of TConfiguration).CopyTo(Array, Int32)
  fullName.vb: ArgentSea.Databases(Of TConfiguration).CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: ArgentSea.Databases`1.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: Databases<TConfiguration>.CopyTo
    fullName: ArgentSea.Databases<TConfiguration>.CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ArgentSea.Databases`1.CopyTo(System.Array,System.Int32)
    name: CopyTo
    nameWithType: Databases(Of TConfiguration).CopyTo
    fullName: ArgentSea.Databases(Of TConfiguration).CopyTo
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Array
    name: Array
    nameWithType: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea.Databases`1.GetEnumerator
  commentId: M:ArgentSea.Databases`1.GetEnumerator
  name: GetEnumerator()
  nameWithType: Databases<TConfiguration>.GetEnumerator()
  fullName: ArgentSea.Databases<TConfiguration>.GetEnumerator()
  nameWithType.vb: Databases(Of TConfiguration).GetEnumerator()
  fullName.vb: ArgentSea.Databases(Of TConfiguration).GetEnumerator()
  spec.csharp:
  - uid: ArgentSea.Databases`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Databases<TConfiguration>.GetEnumerator
    fullName: ArgentSea.Databases<TConfiguration>.GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ArgentSea.Databases`1.GetEnumerator
    name: GetEnumerator
    nameWithType: Databases(Of TConfiguration).GetEnumerator
    fullName: ArgentSea.Databases(Of TConfiguration).GetEnumerator
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea.Sql.SqlDatabases.#ctor*
  commentId: Overload:ArgentSea.Sql.SqlDatabases.#ctor
  name: SqlDatabases
  nameWithType: SqlDatabases.SqlDatabases
  fullName: ArgentSea.Sql.SqlDatabases.SqlDatabases
- uid: Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlDbConnectionOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlDbConnectionOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<SqlDbConnectionOptions>
  nameWithType: IOptions<SqlDbConnectionOptions>
  fullName: Microsoft.Extensions.Options.IOptions<ArgentSea.Sql.SqlDbConnectionOptions>
  nameWithType.vb: IOptions(Of SqlDbConnectionOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of ArgentSea.Sql.SqlDbConnectionOptions)
  name.vb: IOptions(Of SqlDbConnectionOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArgentSea.Sql.SqlDbConnectionOptions
    name: SqlDbConnectionOptions
    nameWithType: SqlDbConnectionOptions
    fullName: ArgentSea.Sql.SqlDbConnectionOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArgentSea.Sql.SqlDbConnectionOptions
    name: SqlDbConnectionOptions
    nameWithType: SqlDbConnectionOptions
    fullName: ArgentSea.Sql.SqlDbConnectionOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<DataSecurityOptions>
  nameWithType: IOptions<DataSecurityOptions>
  fullName: Microsoft.Extensions.Options.IOptions<ArgentSea.DataSecurityOptions>
  nameWithType.vb: IOptions(Of DataSecurityOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of ArgentSea.DataSecurityOptions)
  name.vb: IOptions(Of DataSecurityOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArgentSea.DataSecurityOptions
    name: DataSecurityOptions
    nameWithType: DataSecurityOptions
    fullName: ArgentSea.DataSecurityOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArgentSea.DataSecurityOptions
    name: DataSecurityOptions
    nameWithType: DataSecurityOptions
    fullName: ArgentSea.DataSecurityOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<DataResilienceOptions>
  nameWithType: IOptions<DataResilienceOptions>
  fullName: Microsoft.Extensions.Options.IOptions<ArgentSea.DataResilienceOptions>
  nameWithType.vb: IOptions(Of DataResilienceOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of ArgentSea.DataResilienceOptions)
  name.vb: IOptions(Of DataResilienceOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArgentSea.DataResilienceOptions
    name: DataResilienceOptions
    nameWithType: DataResilienceOptions
    fullName: ArgentSea.DataResilienceOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArgentSea.DataResilienceOptions
    name: DataResilienceOptions
    nameWithType: DataResilienceOptions
    fullName: ArgentSea.DataResilienceOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlDatabases}
  commentId: T:Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlDatabases}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<SqlDatabases>
  nameWithType: ILogger<SqlDatabases>
  fullName: Microsoft.Extensions.Logging.ILogger<ArgentSea.Sql.SqlDatabases>
  nameWithType.vb: ILogger(Of SqlDatabases)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of ArgentSea.Sql.SqlDatabases)
  name.vb: ILogger(Of SqlDatabases)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArgentSea.Sql.SqlDatabases
    name: SqlDatabases
    nameWithType: SqlDatabases
    fullName: ArgentSea.Sql.SqlDatabases
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArgentSea.Sql.SqlDatabases
    name: SqlDatabases
    nameWithType: SqlDatabases
    fullName: ArgentSea.Sql.SqlDatabases
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: true
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
