### YamlMime:ManagedReference
items:
- uid: ArgentSea.Sql.SqlConnectionConfiguration
  commentId: T:ArgentSea.Sql.SqlConnectionConfiguration
  id: SqlConnectionConfiguration
  parent: ArgentSea.Sql
  children:
  - ArgentSea.Sql.SqlConnectionConfiguration.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - ArgentSea.Sql.SqlConnectionConfiguration.ApplicationIntent
  - ArgentSea.Sql.SqlConnectionConfiguration.ApplicationName
  - ArgentSea.Sql.SqlConnectionConfiguration.ConnectionDescription
  - ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryCount
  - ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryInterval
  - ArgentSea.Sql.SqlConnectionConfiguration.ConnectTimeout
  - ArgentSea.Sql.SqlConnectionConfiguration.ContainsKey(System.String)
  - ArgentSea.Sql.SqlConnectionConfiguration.CurrentLanguage
  - ArgentSea.Sql.SqlConnectionConfiguration.DataSource
  - ArgentSea.Sql.SqlConnectionConfiguration.Encrypt
  - ArgentSea.Sql.SqlConnectionConfiguration.FailoverPartner
  - ArgentSea.Sql.SqlConnectionConfiguration.GetConnectionString
  - ArgentSea.Sql.SqlConnectionConfiguration.InitialCatalog
  - ArgentSea.Sql.SqlConnectionConfiguration.LoadBalanceTimeout
  - ArgentSea.Sql.SqlConnectionConfiguration.MaxPoolSize
  - ArgentSea.Sql.SqlConnectionConfiguration.MinPoolSize
  - ArgentSea.Sql.SqlConnectionConfiguration.MultipleActiveResultSets
  - ArgentSea.Sql.SqlConnectionConfiguration.MultiSubnetFailover
  - ArgentSea.Sql.SqlConnectionConfiguration.PacketSize
  - ArgentSea.Sql.SqlConnectionConfiguration.PersistSecurityInfo
  - ArgentSea.Sql.SqlConnectionConfiguration.Pooling
  - ArgentSea.Sql.SqlConnectionConfiguration.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - ArgentSea.Sql.SqlConnectionConfiguration.Remove(System.String)
  - ArgentSea.Sql.SqlConnectionConfiguration.Replication
  - ArgentSea.Sql.SqlConnectionConfiguration.SetSecurity(ArgentSea.SecurityConfiguration)
  - ArgentSea.Sql.SqlConnectionConfiguration.TrustServerCertificate
  - ArgentSea.Sql.SqlConnectionConfiguration.TryGetValue(System.String,System.Object@)
  - ArgentSea.Sql.SqlConnectionConfiguration.TypeSystemVersion
  - ArgentSea.Sql.SqlConnectionConfiguration.WorkstationID
  langs:
  - csharp
  - vb
  name: SqlConnectionConfiguration
  nameWithType: SqlConnectionConfiguration
  fullName: ArgentSea.Sql.SqlConnectionConfiguration
  type: Class
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: SqlConnectionConfiguration
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 16
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nThis class represents is a (non-sharded) database connection.\nNote that the SecurityKey must match a defined key in the DataSecurityOptions; likewise, a DataResilienceKey (if defined) must match as key in the DataResilienceOptions array.\nIf the DataResilienceKey is not defined, a default data resilience strategy will be used.\n"
  example: []
  syntax:
    content: 'public class SqlConnectionConfiguration : IConnectionConfiguration'
    content.vb: >-
      Public Class SqlConnectionConfiguration

          Implements IConnectionConfiguration
  inheritance:
  - System.Object
  implements:
  - ArgentSea.IConnectionConfiguration
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ArgentSea.Sql.SqlConnectionConfiguration.SetSecurity(ArgentSea.SecurityConfiguration)
  commentId: M:ArgentSea.Sql.SqlConnectionConfiguration.SetSecurity(ArgentSea.SecurityConfiguration)
  id: SetSecurity(ArgentSea.SecurityConfiguration)
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: SetSecurity(SecurityConfiguration)
  nameWithType: SqlConnectionConfiguration.SetSecurity(SecurityConfiguration)
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.SetSecurity(ArgentSea.SecurityConfiguration)
  type: Method
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: SetSecurity
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 21
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  syntax:
    content: public void SetSecurity(SecurityConfiguration security)
    parameters:
    - id: security
      type: ArgentSea.SecurityConfiguration
    content.vb: Public Sub SetSecurity(security As SecurityConfiguration)
  overload: ArgentSea.Sql.SqlConnectionConfiguration.SetSecurity*
  implements:
  - ArgentSea.IConnectionConfiguration.SetSecurity(ArgentSea.SecurityConfiguration)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ConnectionDescription
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.ConnectionDescription
  id: ConnectionDescription
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ConnectionDescription
  nameWithType: SqlConnectionConfiguration.ConnectionDescription
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ConnectionDescription
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: ConnectionDescription
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 38
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  syntax:
    content: public string ConnectionDescription { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ConnectionDescription As String
  overload: ArgentSea.Sql.SqlConnectionConfiguration.ConnectionDescription*
  implements:
  - ArgentSea.IConnectionConfiguration.ConnectionDescription
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: ArgentSea.Sql.SqlConnectionConfiguration.GetConnectionString
  commentId: M:ArgentSea.Sql.SqlConnectionConfiguration.GetConnectionString
  id: GetConnectionString
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: GetConnectionString()
  nameWithType: SqlConnectionConfiguration.GetConnectionString()
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.GetConnectionString()
  type: Method
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: GetConnectionString
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 43
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  syntax:
    content: public string GetConnectionString()
    return:
      type: System.String
    content.vb: Public Function GetConnectionString As String
  overload: ArgentSea.Sql.SqlConnectionConfiguration.GetConnectionString*
  implements:
  - ArgentSea.IConnectionConfiguration.GetConnectionString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ApplicationIntent
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.ApplicationIntent
  id: ApplicationIntent
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ApplicationIntent
  nameWithType: SqlConnectionConfiguration.ApplicationIntent
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ApplicationIntent
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: ApplicationIntent
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 50
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nDeclares the application workload type when connecting to a database in an SQL Server Availability Group.\n"
  example: []
  syntax:
    content: public ApplicationIntent ApplicationIntent { get; set; }
    parameters: []
    return:
      type: System.Data.SqlClient.ApplicationIntent
    content.vb: Public Property ApplicationIntent As ApplicationIntent
  overload: ArgentSea.Sql.SqlConnectionConfiguration.ApplicationIntent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ApplicationName
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.ApplicationName
  id: ApplicationName
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: SqlConnectionConfiguration.ApplicationName
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ApplicationName
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: ApplicationName
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 59
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nThe optional application name parameter to be sent to the backend during connection initiation.\n"
  example: []
  syntax:
    content: public string ApplicationName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApplicationName As String
  overload: ArgentSea.Sql.SqlConnectionConfiguration.ApplicationName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryCount
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryCount
  id: ConnectRetryCount
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ConnectRetryCount
  nameWithType: SqlConnectionConfiguration.ConnectRetryCount
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryCount
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: ConnectRetryCount
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 67
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nThe number of reconnections attempted after identifying that there was an idle connection failure. This must be an integer between 0 and 255. Default is 1. Set to 0 to disable reconnecting on idle connection failures.\n"
  example: []
  syntax:
    content: public int ConnectRetryCount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ConnectRetryCount As Integer
  overload: ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryInterval
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryInterval
  id: ConnectRetryInterval
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ConnectRetryInterval
  nameWithType: SqlConnectionConfiguration.ConnectRetryInterval
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryInterval
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: ConnectRetryInterval
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 75
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nAmount of time (in seconds) between each reconnection attempt after identifying that there was an idle connection failure. This must be an integer between 1 and 60. The default is 10 seconds.\n"
  example: []
  syntax:
    content: public int ConnectRetryInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ConnectRetryInterval As Integer
  overload: ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ConnectTimeout
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.ConnectTimeout
  id: ConnectTimeout
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ConnectTimeout
  nameWithType: SqlConnectionConfiguration.ConnectTimeout
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ConnectTimeout
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: ConnectTimeout
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 83
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets the length of time (in seconds) to wait for a connection to the server before terminating the attempt and generating an error.\n"
  example: []
  syntax:
    content: public int ConnectTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ConnectTimeout As Integer
  overload: ArgentSea.Sql.SqlConnectionConfiguration.ConnectTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.CurrentLanguage
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.CurrentLanguage
  id: CurrentLanguage
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: CurrentLanguage
  nameWithType: SqlConnectionConfiguration.CurrentLanguage
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.CurrentLanguage
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: CurrentLanguage
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 91
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets the SQL Server Language record name.\n"
  example: []
  syntax:
    content: public string CurrentLanguage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CurrentLanguage As String
  overload: ArgentSea.Sql.SqlConnectionConfiguration.CurrentLanguage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.DataSource
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.DataSource
  id: DataSource
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: DataSource
  nameWithType: SqlConnectionConfiguration.DataSource
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.DataSource
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: DataSource
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 99
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets the name or network address of the instance of SQL Server to connect to.\n"
  example: []
  syntax:
    content: public string DataSource { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DataSource As String
  overload: ArgentSea.Sql.SqlConnectionConfiguration.DataSource*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.Encrypt
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.Encrypt
  id: Encrypt
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Encrypt
  nameWithType: SqlConnectionConfiguration.Encrypt
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.Encrypt
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: Encrypt
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 107
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets a Boolean value that indicates whether SQL Server uses SSL encryption for all data sent between the client and server if the server has a certificate installed.\n"
  example: []
  syntax:
    content: public bool Encrypt { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Encrypt As Boolean
  overload: ArgentSea.Sql.SqlConnectionConfiguration.Encrypt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.FailoverPartner
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.FailoverPartner
  id: FailoverPartner
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: FailoverPartner
  nameWithType: SqlConnectionConfiguration.FailoverPartner
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.FailoverPartner
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: FailoverPartner
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 115
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets the name or address of the partner server to connect to if the primary server is down.\n"
  example: []
  syntax:
    content: public string FailoverPartner { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FailoverPartner As String
  overload: ArgentSea.Sql.SqlConnectionConfiguration.FailoverPartner*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.InitialCatalog
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.InitialCatalog
  id: InitialCatalog
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: InitialCatalog
  nameWithType: SqlConnectionConfiguration.InitialCatalog
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.InitialCatalog
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: InitialCatalog
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 123
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets the name of the database associated with the connection.\n"
  example: []
  syntax:
    content: public string InitialCatalog { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InitialCatalog As String
  overload: ArgentSea.Sql.SqlConnectionConfiguration.InitialCatalog*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.LoadBalanceTimeout
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.LoadBalanceTimeout
  id: LoadBalanceTimeout
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionConfiguration.LoadBalanceTimeout
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.LoadBalanceTimeout
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: LoadBalanceTimeout
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 131
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets the minimum time, in seconds, for the connection to live in the connection pool before being destroyed.\n"
  example: []
  syntax:
    content: public int LoadBalanceTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LoadBalanceTimeout As Integer
  overload: ArgentSea.Sql.SqlConnectionConfiguration.LoadBalanceTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.MaxPoolSize
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.MaxPoolSize
  id: MaxPoolSize
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: MaxPoolSize
  nameWithType: SqlConnectionConfiguration.MaxPoolSize
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.MaxPoolSize
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: MaxPoolSize
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 139
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets the maximum number of connections allowed in the connection pool for this specific connection string.\n"
  example: []
  syntax:
    content: public int MaxPoolSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxPoolSize As Integer
  overload: ArgentSea.Sql.SqlConnectionConfiguration.MaxPoolSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.MinPoolSize
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.MinPoolSize
  id: MinPoolSize
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: MinPoolSize
  nameWithType: SqlConnectionConfiguration.MinPoolSize
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.MinPoolSize
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: MinPoolSize
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 147
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets the minimum number of connections allowed in the connection pool for this specific connection string.\n"
  example: []
  syntax:
    content: public int MinPoolSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MinPoolSize As Integer
  overload: ArgentSea.Sql.SqlConnectionConfiguration.MinPoolSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.MultipleActiveResultSets
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.MultipleActiveResultSets
  id: MultipleActiveResultSets
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionConfiguration.MultipleActiveResultSets
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.MultipleActiveResultSets
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: MultipleActiveResultSets
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 155
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nWhen true, an application can maintain multiple active result sets (MARS). When false, an application must process or cancel all result sets from one batch before it can execute any other batch on that connection.\n"
  example: []
  syntax:
    content: public bool MultipleActiveResultSets { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property MultipleActiveResultSets As Boolean
  overload: ArgentSea.Sql.SqlConnectionConfiguration.MultipleActiveResultSets*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.MultiSubnetFailover
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.MultiSubnetFailover
  id: MultiSubnetFailover
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: MultiSubnetFailover
  nameWithType: SqlConnectionConfiguration.MultiSubnetFailover
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.MultiSubnetFailover
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: MultiSubnetFailover
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 163
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nIf your application is connecting to an AlwaysOn availability group (AG) on different subnets, setting MultiSubnetFailover=true provides faster detection of and connection to the (currently) active server.\n"
  example: []
  syntax:
    content: public bool MultiSubnetFailover { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property MultiSubnetFailover As Boolean
  overload: ArgentSea.Sql.SqlConnectionConfiguration.MultiSubnetFailover*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.PacketSize
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.PacketSize
  id: PacketSize
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: PacketSize
  nameWithType: SqlConnectionConfiguration.PacketSize
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.PacketSize
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: PacketSize
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 171
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets the size in bytes of the network packets used to communicate with an instance of SQL Server.\n"
  example: []
  syntax:
    content: public int PacketSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PacketSize As Integer
  overload: ArgentSea.Sql.SqlConnectionConfiguration.PacketSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.PersistSecurityInfo
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.PersistSecurityInfo
  id: PersistSecurityInfo
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: PersistSecurityInfo
  nameWithType: SqlConnectionConfiguration.PersistSecurityInfo
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.PersistSecurityInfo
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: PersistSecurityInfo
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 179
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets a Boolean value that indicates if security-sensitive information, such as the password, is not returned as part of the connection if the connection is open or has ever been in an open state.\n"
  example: []
  syntax:
    content: public bool PersistSecurityInfo { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PersistSecurityInfo As Boolean
  overload: ArgentSea.Sql.SqlConnectionConfiguration.PersistSecurityInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.Pooling
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.Pooling
  id: Pooling
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Pooling
  nameWithType: SqlConnectionConfiguration.Pooling
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.Pooling
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: Pooling
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 187
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets a Boolean value that indicates whether the connection will be pooled or explicitly opened every time that the connection is requested.\n"
  example: []
  syntax:
    content: public bool Pooling { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Pooling As Boolean
  overload: ArgentSea.Sql.SqlConnectionConfiguration.Pooling*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.Replication
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.Replication
  id: Replication
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Replication
  nameWithType: SqlConnectionConfiguration.Replication
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.Replication
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: Replication
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 195
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets a Boolean value that indicates whether replication is supported using the connection.\n"
  example: []
  syntax:
    content: public bool Replication { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Replication As Boolean
  overload: ArgentSea.Sql.SqlConnectionConfiguration.Replication*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.TrustServerCertificate
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.TrustServerCertificate
  id: TrustServerCertificate
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: TrustServerCertificate
  nameWithType: SqlConnectionConfiguration.TrustServerCertificate
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.TrustServerCertificate
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: TrustServerCertificate
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 203
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets a value that indicates whether the channel will be encrypted while bypassing walking the certificate chain to validate trust.\n"
  example: []
  syntax:
    content: public bool TrustServerCertificate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property TrustServerCertificate As Boolean
  overload: ArgentSea.Sql.SqlConnectionConfiguration.TrustServerCertificate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.TypeSystemVersion
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.TypeSystemVersion
  id: TypeSystemVersion
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: TypeSystemVersion
  nameWithType: SqlConnectionConfiguration.TypeSystemVersion
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.TypeSystemVersion
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: TypeSystemVersion
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 211
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets a string value that indicates the type system the application expects.\n"
  example: []
  syntax:
    content: public string TypeSystemVersion { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TypeSystemVersion As String
  overload: ArgentSea.Sql.SqlConnectionConfiguration.TypeSystemVersion*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.WorkstationID
  commentId: P:ArgentSea.Sql.SqlConnectionConfiguration.WorkstationID
  id: WorkstationID
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: WorkstationID
  nameWithType: SqlConnectionConfiguration.WorkstationID
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.WorkstationID
  type: Property
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: WorkstationID
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 219
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nGets or sets the name of the workstation connecting to SQL Server.\n"
  example: []
  syntax:
    content: public string WorkstationID { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property WorkstationID As String
  overload: ArgentSea.Sql.SqlConnectionConfiguration.WorkstationID*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:ArgentSea.Sql.SqlConnectionConfiguration.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Add(KeyValuePair<String, Object>)
  nameWithType: SqlConnectionConfiguration.Add(KeyValuePair<String, Object>)
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.Add(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: Add
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 257
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nAdds an item to the configuration\n"
  example: []
  syntax:
    content: public void Add(KeyValuePair<string, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: ''
    content.vb: Public Sub Add(item As KeyValuePair(Of String, Object))
  overload: ArgentSea.Sql.SqlConnectionConfiguration.Add*
  nameWithType.vb: SqlConnectionConfiguration.Add(KeyValuePair(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ArgentSea.Sql.SqlConnectionConfiguration.Add(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Add(KeyValuePair(Of String, Object))
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ContainsKey(System.String)
  commentId: M:ArgentSea.Sql.SqlConnectionConfiguration.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ContainsKey(String)
  nameWithType: SqlConnectionConfiguration.ContainsKey(String)
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ContainsKey(System.String)
  type: Method
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: ContainsKey
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 264
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nDetermines whether the configuration contains a specific key.\n"
  example: []
  syntax:
    content: public bool ContainsKey(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ContainsKey(key As String) As Boolean
  overload: ArgentSea.Sql.SqlConnectionConfiguration.ContainsKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:ArgentSea.Sql.SqlConnectionConfiguration.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Remove(KeyValuePair<String, Object>)
  nameWithType: SqlConnectionConfiguration.Remove(KeyValuePair<String, Object>)
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.Remove(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: Remove
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 272
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nRemoves the entry from the configuration instance.\n"
  example: []
  syntax:
    content: public void Remove(KeyValuePair<string, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
    content.vb: Public Sub Remove(item As KeyValuePair(Of String, Object))
  overload: ArgentSea.Sql.SqlConnectionConfiguration.Remove*
  nameWithType.vb: SqlConnectionConfiguration.Remove(KeyValuePair(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ArgentSea.Sql.SqlConnectionConfiguration.Remove(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Remove(KeyValuePair(Of String, Object))
- uid: ArgentSea.Sql.SqlConnectionConfiguration.Remove(System.String)
  commentId: M:ArgentSea.Sql.SqlConnectionConfiguration.Remove(System.String)
  id: Remove(System.String)
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: SqlConnectionConfiguration.Remove(String)
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: Remove
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 280
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nRemoves the entry from the configuration instance.\n"
  example: []
  syntax:
    content: public void Remove(string key)
    parameters:
    - id: key
      type: System.String
    content.vb: Public Sub Remove(key As String)
  overload: ArgentSea.Sql.SqlConnectionConfiguration.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ArgentSea.Sql.SqlConnectionConfiguration.TryGetValue(System.String,System.Object@)
  commentId: M:ArgentSea.Sql.SqlConnectionConfiguration.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: ArgentSea.Sql.SqlConnectionConfiguration
  langs:
  - csharp
  - vb
  name: TryGetValue(String, out Object)
  nameWithType: SqlConnectionConfiguration.TryGetValue(String, out Object)
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.TryGetValue(System.String, out System.Object)
  type: Method
  source:
    remote:
      path: src/SqlConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: TryGetValue
    path: ../ArgentSea.Sql/src/SqlConnectionConfiguration.cs
    startLine: 285
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  syntax:
    content: public bool TryGetValue(string key, out object value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Function TryGetValue(key As String, ByRef value As Object) As Boolean
  overload: ArgentSea.Sql.SqlConnectionConfiguration.TryGetValue*
  nameWithType.vb: SqlConnectionConfiguration.TryGetValue(String, ByRef Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ArgentSea.Sql.SqlConnectionConfiguration.TryGetValue(System.String, ByRef System.Object)
  name.vb: TryGetValue(String, ByRef Object)
references:
- uid: ArgentSea.Sql
  commentId: N:ArgentSea.Sql
  name: ArgentSea.Sql
  nameWithType: ArgentSea.Sql
  fullName: ArgentSea.Sql
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ArgentSea.IConnectionConfiguration
  commentId: T:ArgentSea.IConnectionConfiguration
  parent: ArgentSea
  name: IConnectionConfiguration
  nameWithType: IConnectionConfiguration
  fullName: ArgentSea.IConnectionConfiguration
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ArgentSea
  commentId: N:ArgentSea
  name: ArgentSea
  nameWithType: ArgentSea
  fullName: ArgentSea
- uid: ArgentSea.Sql.SqlConnectionConfiguration.SetSecurity*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.SetSecurity
  name: SetSecurity
  nameWithType: SqlConnectionConfiguration.SetSecurity
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.SetSecurity
- uid: ArgentSea.IConnectionConfiguration.SetSecurity(ArgentSea.SecurityConfiguration)
  commentId: M:ArgentSea.IConnectionConfiguration.SetSecurity(ArgentSea.SecurityConfiguration)
  parent: ArgentSea.IConnectionConfiguration
  name: SetSecurity(SecurityConfiguration)
  nameWithType: IConnectionConfiguration.SetSecurity(SecurityConfiguration)
  fullName: ArgentSea.IConnectionConfiguration.SetSecurity(ArgentSea.SecurityConfiguration)
  spec.csharp:
  - uid: ArgentSea.IConnectionConfiguration.SetSecurity(ArgentSea.SecurityConfiguration)
    name: SetSecurity
    nameWithType: IConnectionConfiguration.SetSecurity
    fullName: ArgentSea.IConnectionConfiguration.SetSecurity
  - name: (
    nameWithType: (
    fullName: (
  - uid: ArgentSea.SecurityConfiguration
    name: SecurityConfiguration
    nameWithType: SecurityConfiguration
    fullName: ArgentSea.SecurityConfiguration
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ArgentSea.IConnectionConfiguration.SetSecurity(ArgentSea.SecurityConfiguration)
    name: SetSecurity
    nameWithType: IConnectionConfiguration.SetSecurity
    fullName: ArgentSea.IConnectionConfiguration.SetSecurity
  - name: (
    nameWithType: (
    fullName: (
  - uid: ArgentSea.SecurityConfiguration
    name: SecurityConfiguration
    nameWithType: SecurityConfiguration
    fullName: ArgentSea.SecurityConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea.SecurityConfiguration
  commentId: T:ArgentSea.SecurityConfiguration
  parent: ArgentSea
  name: SecurityConfiguration
  nameWithType: SecurityConfiguration
  fullName: ArgentSea.SecurityConfiguration
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ConnectionDescription*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.ConnectionDescription
  name: ConnectionDescription
  nameWithType: SqlConnectionConfiguration.ConnectionDescription
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ConnectionDescription
- uid: ArgentSea.IConnectionConfiguration.ConnectionDescription
  commentId: P:ArgentSea.IConnectionConfiguration.ConnectionDescription
  parent: ArgentSea.IConnectionConfiguration
  name: ConnectionDescription
  nameWithType: IConnectionConfiguration.ConnectionDescription
  fullName: ArgentSea.IConnectionConfiguration.ConnectionDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ArgentSea.Sql.SqlConnectionConfiguration.GetConnectionString*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.GetConnectionString
  name: GetConnectionString
  nameWithType: SqlConnectionConfiguration.GetConnectionString
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.GetConnectionString
- uid: ArgentSea.IConnectionConfiguration.GetConnectionString
  commentId: M:ArgentSea.IConnectionConfiguration.GetConnectionString
  parent: ArgentSea.IConnectionConfiguration
  name: GetConnectionString()
  nameWithType: IConnectionConfiguration.GetConnectionString()
  fullName: ArgentSea.IConnectionConfiguration.GetConnectionString()
  spec.csharp:
  - uid: ArgentSea.IConnectionConfiguration.GetConnectionString
    name: GetConnectionString
    nameWithType: IConnectionConfiguration.GetConnectionString
    fullName: ArgentSea.IConnectionConfiguration.GetConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ArgentSea.IConnectionConfiguration.GetConnectionString
    name: GetConnectionString
    nameWithType: IConnectionConfiguration.GetConnectionString
    fullName: ArgentSea.IConnectionConfiguration.GetConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ApplicationIntent*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.ApplicationIntent
  name: ApplicationIntent
  nameWithType: SqlConnectionConfiguration.ApplicationIntent
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ApplicationIntent
- uid: System.Data.SqlClient.ApplicationIntent
  commentId: T:System.Data.SqlClient.ApplicationIntent
  parent: System.Data.SqlClient
  isExternal: true
  name: ApplicationIntent
  nameWithType: ApplicationIntent
  fullName: System.Data.SqlClient.ApplicationIntent
- uid: System.Data.SqlClient
  commentId: N:System.Data.SqlClient
  isExternal: true
  name: System.Data.SqlClient
  nameWithType: System.Data.SqlClient
  fullName: System.Data.SqlClient
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ApplicationName*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.ApplicationName
  name: ApplicationName
  nameWithType: SqlConnectionConfiguration.ApplicationName
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ApplicationName
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryCount*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryCount
  name: ConnectRetryCount
  nameWithType: SqlConnectionConfiguration.ConnectRetryCount
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryInterval*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryInterval
  name: ConnectRetryInterval
  nameWithType: SqlConnectionConfiguration.ConnectRetryInterval
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ConnectRetryInterval
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ConnectTimeout*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.ConnectTimeout
  name: ConnectTimeout
  nameWithType: SqlConnectionConfiguration.ConnectTimeout
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ConnectTimeout
- uid: ArgentSea.Sql.SqlConnectionConfiguration.CurrentLanguage*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.CurrentLanguage
  name: CurrentLanguage
  nameWithType: SqlConnectionConfiguration.CurrentLanguage
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.CurrentLanguage
- uid: ArgentSea.Sql.SqlConnectionConfiguration.DataSource*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.DataSource
  name: DataSource
  nameWithType: SqlConnectionConfiguration.DataSource
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.DataSource
- uid: ArgentSea.Sql.SqlConnectionConfiguration.Encrypt*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.Encrypt
  name: Encrypt
  nameWithType: SqlConnectionConfiguration.Encrypt
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.Encrypt
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ArgentSea.Sql.SqlConnectionConfiguration.FailoverPartner*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.FailoverPartner
  name: FailoverPartner
  nameWithType: SqlConnectionConfiguration.FailoverPartner
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.FailoverPartner
- uid: ArgentSea.Sql.SqlConnectionConfiguration.InitialCatalog*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.InitialCatalog
  name: InitialCatalog
  nameWithType: SqlConnectionConfiguration.InitialCatalog
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.InitialCatalog
- uid: ArgentSea.Sql.SqlConnectionConfiguration.LoadBalanceTimeout*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.LoadBalanceTimeout
  name: LoadBalanceTimeout
  nameWithType: SqlConnectionConfiguration.LoadBalanceTimeout
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.LoadBalanceTimeout
- uid: ArgentSea.Sql.SqlConnectionConfiguration.MaxPoolSize*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.MaxPoolSize
  name: MaxPoolSize
  nameWithType: SqlConnectionConfiguration.MaxPoolSize
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.MaxPoolSize
- uid: ArgentSea.Sql.SqlConnectionConfiguration.MinPoolSize*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.MinPoolSize
  name: MinPoolSize
  nameWithType: SqlConnectionConfiguration.MinPoolSize
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.MinPoolSize
- uid: ArgentSea.Sql.SqlConnectionConfiguration.MultipleActiveResultSets*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.MultipleActiveResultSets
  name: MultipleActiveResultSets
  nameWithType: SqlConnectionConfiguration.MultipleActiveResultSets
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.MultipleActiveResultSets
- uid: ArgentSea.Sql.SqlConnectionConfiguration.MultiSubnetFailover*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.MultiSubnetFailover
  name: MultiSubnetFailover
  nameWithType: SqlConnectionConfiguration.MultiSubnetFailover
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.MultiSubnetFailover
- uid: ArgentSea.Sql.SqlConnectionConfiguration.PacketSize*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.PacketSize
  name: PacketSize
  nameWithType: SqlConnectionConfiguration.PacketSize
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.PacketSize
- uid: ArgentSea.Sql.SqlConnectionConfiguration.PersistSecurityInfo*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.PersistSecurityInfo
  name: PersistSecurityInfo
  nameWithType: SqlConnectionConfiguration.PersistSecurityInfo
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.PersistSecurityInfo
- uid: ArgentSea.Sql.SqlConnectionConfiguration.Pooling*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.Pooling
  name: Pooling
  nameWithType: SqlConnectionConfiguration.Pooling
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.Pooling
- uid: ArgentSea.Sql.SqlConnectionConfiguration.Replication*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.Replication
  name: Replication
  nameWithType: SqlConnectionConfiguration.Replication
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.Replication
- uid: ArgentSea.Sql.SqlConnectionConfiguration.TrustServerCertificate*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.TrustServerCertificate
  name: TrustServerCertificate
  nameWithType: SqlConnectionConfiguration.TrustServerCertificate
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.TrustServerCertificate
- uid: ArgentSea.Sql.SqlConnectionConfiguration.TypeSystemVersion*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.TypeSystemVersion
  name: TypeSystemVersion
  nameWithType: SqlConnectionConfiguration.TypeSystemVersion
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.TypeSystemVersion
- uid: ArgentSea.Sql.SqlConnectionConfiguration.WorkstationID*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.WorkstationID
  name: WorkstationID
  nameWithType: SqlConnectionConfiguration.WorkstationID
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.WorkstationID
- uid: ArgentSea.Sql.SqlConnectionConfiguration.Add*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.Add
  name: Add
  nameWithType: SqlConnectionConfiguration.Add
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.Add
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}
  commentId: T:System.Collections.Generic.KeyValuePair{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<String, Object>
  nameWithType: KeyValuePair<String, Object>
  fullName: System.Collections.Generic.KeyValuePair<System.String, System.Object>
  nameWithType.vb: KeyValuePair(Of String, Object)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.String, System.Object)
  name.vb: KeyValuePair(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ArgentSea.Sql.SqlConnectionConfiguration.ContainsKey*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.ContainsKey
  name: ContainsKey
  nameWithType: SqlConnectionConfiguration.ContainsKey
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.ContainsKey
- uid: ArgentSea.Sql.SqlConnectionConfiguration.Remove*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.Remove
  name: Remove
  nameWithType: SqlConnectionConfiguration.Remove
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.Remove
- uid: ArgentSea.Sql.SqlConnectionConfiguration.TryGetValue*
  commentId: Overload:ArgentSea.Sql.SqlConnectionConfiguration.TryGetValue
  name: TryGetValue
  nameWithType: SqlConnectionConfiguration.TryGetValue
  fullName: ArgentSea.Sql.SqlConnectionConfiguration.TryGetValue
