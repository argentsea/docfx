### YamlMime:ManagedReference
items:
- uid: ArgentSea.Sql.SqlShardSets`1
  commentId: T:ArgentSea.Sql.SqlShardSets`1
  id: SqlShardSets`1
  parent: ArgentSea.Sql
  children:
  - ArgentSea.Sql.SqlShardSets`1.#ctor(Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlShardConnectionOptions{`0}},Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions},Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions},Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlShardSets{`0}})
  langs:
  - csharp
  - vb
  name: SqlShardSets<TShard>
  nameWithType: SqlShardSets<TShard>
  fullName: ArgentSea.Sql.SqlShardSets<TShard>
  type: Class
  source:
    remote:
      path: src/SqlShardSets.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: SqlShardSets
    path: ../ArgentSea.Sql/src/SqlShardSets.cs
    startLine: 11
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  summary: "\nThis configuration class contains the configuration information for a shard set.\n"
  example: []
  syntax:
    content: 'public class SqlShardSets<TShard> : ShardDataStores<TShard, SqlShardConnectionOptions<TShard>> where TShard : IComparable'
    typeParameters:
    - id: TShard
      description: ''
    content.vb: >-
      Public Class SqlShardSets(Of TShard As IComparable)
          Inherits ShardDataStores(Of TShard, SqlShardConnectionOptions(Of TShard))
  inheritance:
  - System.Object
  - ArgentSea.ShardDataStores{{TShard},ArgentSea.Sql.SqlShardConnectionOptions{{TShard}}}
  inheritedMembers:
  - ArgentSea.ShardDataStores{{TShard},ArgentSea.Sql.SqlShardConnectionOptions{{TShard}}}.ShardSets
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: SqlShardSets(Of TShard)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: ArgentSea.Sql.SqlShardSets(Of TShard)
  name.vb: SqlShardSets(Of TShard)
- uid: ArgentSea.Sql.SqlShardSets`1.#ctor(Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlShardConnectionOptions{`0}},Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions},Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions},Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlShardSets{`0}})
  commentId: M:ArgentSea.Sql.SqlShardSets`1.#ctor(Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlShardConnectionOptions{`0}},Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions},Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions},Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlShardSets{`0}})
  id: '#ctor(Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlShardConnectionOptions{`0}},Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions},Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions},Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlShardSets{`0}})'
  parent: ArgentSea.Sql.SqlShardSets`1
  langs:
  - csharp
  - vb
  name: SqlShardSets(IOptions<SqlShardConnectionOptions<TShard>>, IOptions<DataSecurityOptions>, IOptions<DataResilienceOptions>, ILogger<SqlShardSets<TShard>>)
  nameWithType: SqlShardSets<TShard>.SqlShardSets(IOptions<SqlShardConnectionOptions<TShard>>, IOptions<DataSecurityOptions>, IOptions<DataResilienceOptions>, ILogger<SqlShardSets<TShard>>)
  fullName: ArgentSea.Sql.SqlShardSets<TShard>.SqlShardSets(Microsoft.Extensions.Options.IOptions<ArgentSea.Sql.SqlShardConnectionOptions<TShard>>, Microsoft.Extensions.Options.IOptions<ArgentSea.DataSecurityOptions>, Microsoft.Extensions.Options.IOptions<ArgentSea.DataResilienceOptions>, Microsoft.Extensions.Logging.ILogger<ArgentSea.Sql.SqlShardSets<TShard>>)
  type: Constructor
  source:
    remote:
      path: src/SqlShardSets.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: .ctor
    path: ../ArgentSea.Sql/src/SqlShardSets.cs
    startLine: 13
  assemblies:
  - ArgentSea.Sql
  namespace: ArgentSea.Sql
  syntax:
    content: public SqlShardSets(IOptions<SqlShardConnectionOptions<TShard>> configOptions, IOptions<DataSecurityOptions> securityOptions, IOptions<DataResilienceOptions> resilienceStrategiesOptions, ILogger<SqlShardSets<TShard>> logger)
    parameters:
    - id: configOptions
      type: Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlShardConnectionOptions{{TShard}}}
    - id: securityOptions
      type: Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions}
    - id: resilienceStrategiesOptions
      type: Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions}
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlShardSets`1}
    content.vb: Public Sub New(configOptions As IOptions(Of SqlShardConnectionOptions(Of TShard)), securityOptions As IOptions(Of DataSecurityOptions), resilienceStrategiesOptions As IOptions(Of DataResilienceOptions), logger As ILogger(Of SqlShardSets(Of TShard)))
  overload: ArgentSea.Sql.SqlShardSets`1.#ctor*
  nameWithType.vb: SqlShardSets(Of TShard).SqlShardSets(IOptions(Of SqlShardConnectionOptions(Of TShard)), IOptions(Of DataSecurityOptions), IOptions(Of DataResilienceOptions), ILogger(Of SqlShardSets(Of TShard)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ArgentSea.Sql.SqlShardSets(Of TShard).SqlShardSets(Microsoft.Extensions.Options.IOptions(Of ArgentSea.Sql.SqlShardConnectionOptions(Of TShard)), Microsoft.Extensions.Options.IOptions(Of ArgentSea.DataSecurityOptions), Microsoft.Extensions.Options.IOptions(Of ArgentSea.DataResilienceOptions), Microsoft.Extensions.Logging.ILogger(Of ArgentSea.Sql.SqlShardSets(Of TShard)))
  name.vb: SqlShardSets(IOptions(Of SqlShardConnectionOptions(Of TShard)), IOptions(Of DataSecurityOptions), IOptions(Of DataResilienceOptions), ILogger(Of SqlShardSets(Of TShard)))
references:
- uid: ArgentSea.Sql
  commentId: N:ArgentSea.Sql
  name: ArgentSea.Sql
  nameWithType: ArgentSea.Sql
  fullName: ArgentSea.Sql
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ArgentSea.ShardDataStores{{TShard},ArgentSea.Sql.SqlShardConnectionOptions{{TShard}}}
  commentId: T:ArgentSea.ShardDataStores{`0,ArgentSea.Sql.SqlShardConnectionOptions{`0}}
  parent: ArgentSea
  definition: ArgentSea.ShardDataStores`2
  name: ShardDataStores<TShard, SqlShardConnectionOptions<TShard>>
  nameWithType: ShardDataStores<TShard, SqlShardConnectionOptions<TShard>>
  fullName: ArgentSea.ShardDataStores<TShard, ArgentSea.Sql.SqlShardConnectionOptions<TShard>>
  nameWithType.vb: ShardDataStores(Of TShard, SqlShardConnectionOptions(Of TShard))
  fullName.vb: ArgentSea.ShardDataStores(Of TShard, ArgentSea.Sql.SqlShardConnectionOptions(Of TShard))
  name.vb: ShardDataStores(Of TShard, SqlShardConnectionOptions(Of TShard))
  spec.csharp:
  - uid: ArgentSea.ShardDataStores`2
    name: ShardDataStores
    nameWithType: ShardDataStores
    fullName: ArgentSea.ShardDataStores
  - name: <
    nameWithType: <
    fullName: <
  - name: TShard
    nameWithType: TShard
    fullName: TShard
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ArgentSea.Sql.SqlShardConnectionOptions`1
    name: SqlShardConnectionOptions
    nameWithType: SqlShardConnectionOptions
    fullName: ArgentSea.Sql.SqlShardConnectionOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TShard
    nameWithType: TShard
    fullName: TShard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArgentSea.ShardDataStores`2
    name: ShardDataStores
    nameWithType: ShardDataStores
    fullName: ArgentSea.ShardDataStores
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TShard
    nameWithType: TShard
    fullName: TShard
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ArgentSea.Sql.SqlShardConnectionOptions`1
    name: SqlShardConnectionOptions
    nameWithType: SqlShardConnectionOptions
    fullName: ArgentSea.Sql.SqlShardConnectionOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TShard
    nameWithType: TShard
    fullName: TShard
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea.ShardDataStores{{TShard},ArgentSea.Sql.SqlShardConnectionOptions{{TShard}}}.ShardSets
  commentId: P:ArgentSea.ShardDataStores{`0,ArgentSea.Sql.SqlShardConnectionOptions{`0}}.ShardSets
  parent: ArgentSea.ShardDataStores{{TShard},ArgentSea.Sql.SqlShardConnectionOptions{{TShard}}}
  definition: ArgentSea.ShardDataStores`2.ShardSets
  name: ShardSets
  nameWithType: ShardDataStores<TShard, SqlShardConnectionOptions<TShard>>.ShardSets
  fullName: ArgentSea.ShardDataStores<TShard, ArgentSea.Sql.SqlShardConnectionOptions<TShard>>.ShardSets
  nameWithType.vb: ShardDataStores(Of TShard, SqlShardConnectionOptions(Of TShard)).ShardSets
  fullName.vb: ArgentSea.ShardDataStores(Of TShard, ArgentSea.Sql.SqlShardConnectionOptions(Of TShard)).ShardSets
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ArgentSea.ShardDataStores`2
  commentId: T:ArgentSea.ShardDataStores`2
  name: ShardDataStores<TShard, TConfiguration>
  nameWithType: ShardDataStores<TShard, TConfiguration>
  fullName: ArgentSea.ShardDataStores<TShard, TConfiguration>
  nameWithType.vb: ShardDataStores(Of TShard, TConfiguration)
  fullName.vb: ArgentSea.ShardDataStores(Of TShard, TConfiguration)
  name.vb: ShardDataStores(Of TShard, TConfiguration)
  spec.csharp:
  - uid: ArgentSea.ShardDataStores`2
    name: ShardDataStores
    nameWithType: ShardDataStores
    fullName: ArgentSea.ShardDataStores
  - name: <
    nameWithType: <
    fullName: <
  - name: TShard
    nameWithType: TShard
    fullName: TShard
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TConfiguration
    nameWithType: TConfiguration
    fullName: TConfiguration
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: ArgentSea.ShardDataStores`2
    name: ShardDataStores
    nameWithType: ShardDataStores
    fullName: ArgentSea.ShardDataStores
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TShard
    nameWithType: TShard
    fullName: TShard
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TConfiguration
    nameWithType: TConfiguration
    fullName: TConfiguration
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea
  commentId: N:ArgentSea
  name: ArgentSea
  nameWithType: ArgentSea
  fullName: ArgentSea
- uid: ArgentSea.ShardDataStores`2.ShardSets
  commentId: P:ArgentSea.ShardDataStores`2.ShardSets
  name: ShardSets
  nameWithType: ShardDataStores<TShard, TConfiguration>.ShardSets
  fullName: ArgentSea.ShardDataStores<TShard, TConfiguration>.ShardSets
  nameWithType.vb: ShardDataStores(Of TShard, TConfiguration).ShardSets
  fullName.vb: ArgentSea.ShardDataStores(Of TShard, TConfiguration).ShardSets
- uid: ArgentSea.Sql.SqlShardSets`1.#ctor*
  commentId: Overload:ArgentSea.Sql.SqlShardSets`1.#ctor
  name: SqlShardSets
  nameWithType: SqlShardSets<TShard>.SqlShardSets
  fullName: ArgentSea.Sql.SqlShardSets<TShard>.SqlShardSets
  nameWithType.vb: SqlShardSets(Of TShard).SqlShardSets
  fullName.vb: ArgentSea.Sql.SqlShardSets(Of TShard).SqlShardSets
- uid: Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlShardConnectionOptions{{TShard}}}
  commentId: T:Microsoft.Extensions.Options.IOptions{ArgentSea.Sql.SqlShardConnectionOptions{`0}}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<SqlShardConnectionOptions<TShard>>
  nameWithType: IOptions<SqlShardConnectionOptions<TShard>>
  fullName: Microsoft.Extensions.Options.IOptions<ArgentSea.Sql.SqlShardConnectionOptions<TShard>>
  nameWithType.vb: IOptions(Of SqlShardConnectionOptions(Of TShard))
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of ArgentSea.Sql.SqlShardConnectionOptions(Of TShard))
  name.vb: IOptions(Of SqlShardConnectionOptions(Of TShard))
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArgentSea.Sql.SqlShardConnectionOptions`1
    name: SqlShardConnectionOptions
    nameWithType: SqlShardConnectionOptions
    fullName: ArgentSea.Sql.SqlShardConnectionOptions
  - name: <
    nameWithType: <
    fullName: <
  - name: TShard
    nameWithType: TShard
    fullName: TShard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArgentSea.Sql.SqlShardConnectionOptions`1
    name: SqlShardConnectionOptions
    nameWithType: SqlShardConnectionOptions
    fullName: ArgentSea.Sql.SqlShardConnectionOptions
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TShard
    nameWithType: TShard
    fullName: TShard
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{ArgentSea.DataSecurityOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<DataSecurityOptions>
  nameWithType: IOptions<DataSecurityOptions>
  fullName: Microsoft.Extensions.Options.IOptions<ArgentSea.DataSecurityOptions>
  nameWithType.vb: IOptions(Of DataSecurityOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of ArgentSea.DataSecurityOptions)
  name.vb: IOptions(Of DataSecurityOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArgentSea.DataSecurityOptions
    name: DataSecurityOptions
    nameWithType: DataSecurityOptions
    fullName: ArgentSea.DataSecurityOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArgentSea.DataSecurityOptions
    name: DataSecurityOptions
    nameWithType: DataSecurityOptions
    fullName: ArgentSea.DataSecurityOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions}
  commentId: T:Microsoft.Extensions.Options.IOptions{ArgentSea.DataResilienceOptions}
  parent: Microsoft.Extensions.Options
  definition: Microsoft.Extensions.Options.IOptions`1
  name: IOptions<DataResilienceOptions>
  nameWithType: IOptions<DataResilienceOptions>
  fullName: Microsoft.Extensions.Options.IOptions<ArgentSea.DataResilienceOptions>
  nameWithType.vb: IOptions(Of DataResilienceOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of ArgentSea.DataResilienceOptions)
  name.vb: IOptions(Of DataResilienceOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArgentSea.DataResilienceOptions
    name: DataResilienceOptions
    nameWithType: DataResilienceOptions
    fullName: ArgentSea.DataResilienceOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArgentSea.DataResilienceOptions
    name: DataResilienceOptions
    nameWithType: DataResilienceOptions
    fullName: ArgentSea.DataResilienceOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlShardSets`1}
  commentId: T:Microsoft.Extensions.Logging.ILogger{ArgentSea.Sql.SqlShardSets`1}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  name: ILogger<SqlShardSets<TShard>>
  nameWithType: ILogger<SqlShardSets<TShard>>
  fullName: Microsoft.Extensions.Logging.ILogger<ArgentSea.Sql.SqlShardSets<TShard>>
  nameWithType.vb: ILogger(Of SqlShardSets(Of TShard))
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of ArgentSea.Sql.SqlShardSets(Of TShard))
  name.vb: ILogger(Of SqlShardSets(Of TShard))
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ArgentSea.Sql.SqlShardSets`1
    name: SqlShardSets
    nameWithType: SqlShardSets
    fullName: ArgentSea.Sql.SqlShardSets
  - name: <
    nameWithType: <
    fullName: <
  - name: TShard
    nameWithType: TShard
    fullName: TShard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ArgentSea.Sql.SqlShardSets`1
    name: SqlShardSets
    nameWithType: SqlShardSets
    fullName: ArgentSea.Sql.SqlShardSets
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TShard
    nameWithType: TShard
    fullName: TShard
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options.IOptions`1
  commentId: T:Microsoft.Extensions.Options.IOptions`1
  isExternal: true
  name: IOptions<TOptions>
  nameWithType: IOptions<TOptions>
  fullName: Microsoft.Extensions.Options.IOptions<TOptions>
  nameWithType.vb: IOptions(Of TOptions)
  fullName.vb: Microsoft.Extensions.Options.IOptions(Of TOptions)
  name.vb: IOptions(Of TOptions)
  spec.csharp:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Options.IOptions`1
    name: IOptions
    nameWithType: IOptions
    fullName: Microsoft.Extensions.Options.IOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TOptions
    nameWithType: TOptions
    fullName: TOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Options
  commentId: N:Microsoft.Extensions.Options
  isExternal: true
  name: Microsoft.Extensions.Options
  nameWithType: Microsoft.Extensions.Options
  fullName: Microsoft.Extensions.Options
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TCategoryName
    nameWithType: TCategoryName
    fullName: TCategoryName
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
