### YamlMime:ManagedReference
items:
- uid: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions
  commentId: T:Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions
  id: SqlServiceBuilderExtensions
  parent: Microsoft.Extensions.DependencyInjection
  children:
  - Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  - Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  langs:
  - csharp
  - vb
  name: SqlServiceBuilderExtensions
  nameWithType: SqlServiceBuilderExtensions
  fullName: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions
  type: Class
  source:
    remote:
      path: src/SqlServiceBuilderExtensions.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: SqlServiceBuilderExtensions
    path: ../ArgentSea.Sql/src/SqlServiceBuilderExtensions.cs
    startLine: 12
  assemblies:
  - ArgentSea.Sql
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nThis static class adds the injectable SQL data services into the services collection.\n"
  example: []
  syntax:
    content: public static class SqlServiceBuilderExtensions
    content.vb: Public Module SqlServiceBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  id: AddSqlServices(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddSqlServices(IServiceCollection, IConfiguration)
  nameWithType: SqlServiceBuilderExtensions.AddSqlServices(IServiceCollection, IConfiguration)
  fullName: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/SqlServiceBuilderExtensions.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: AddSqlServices
    path: ../ArgentSea.Sql/src/SqlServiceBuilderExtensions.cs
    startLine: 20
  assemblies:
  - ArgentSea.Sql
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nLoads configuration into injectable Options and the DbDataStores service. This overload does not load ShardSets.  ILogger service should have already be created.\n"
  example: []
  syntax:
    content: public static IServiceCollection AddSqlServices(this IServiceCollection services, IConfiguration config)
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: ''
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddSqlServices(services As IServiceCollection, config As IConfiguration) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  id: AddSqlServices``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)
  isExtensionMethod: true
  parent: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions
  langs:
  - csharp
  - vb
  name: AddSqlServices<TShard>(IServiceCollection, IConfiguration)
  nameWithType: SqlServiceBuilderExtensions.AddSqlServices<TShard>(IServiceCollection, IConfiguration)
  fullName: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices<TShard>(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  type: Method
  source:
    remote:
      path: src/SqlServiceBuilderExtensions.cs
      branch: master
      repo: https://github.com/argentsea/sql.git
    id: AddSqlServices
    path: ../ArgentSea.Sql/src/SqlServiceBuilderExtensions.cs
    startLine: 40
  assemblies:
  - ArgentSea.Sql
  namespace: Microsoft.Extensions.DependencyInjection
  summary: "\nLoads configuration into injectable Options and the DbDataStores and ShardDataStores services. ILogger service should have already be created.\n"
  example: []
  syntax:
    content: >-
      public static IServiceCollection AddSqlServices<TShard>(this IServiceCollection services, IConfiguration config)
          where TShard : IComparable
    parameters:
    - id: services
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    - id: config
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: ''
    typeParameters:
    - id: TShard
      description: ''
    return:
      type: Microsoft.Extensions.DependencyInjection.IServiceCollection
      description: ''
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function AddSqlServices(Of TShard As IComparable)(services As IServiceCollection, config As IConfiguration) As IServiceCollection
  overload: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices*
  nameWithType.vb: SqlServiceBuilderExtensions.AddSqlServices(Of TShard)(IServiceCollection, IConfiguration)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices(Of TShard)(Microsoft.Extensions.DependencyInjection.IServiceCollection, Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: AddSqlServices(Of TShard)(IServiceCollection, IConfiguration)
references:
- uid: Microsoft.Extensions.DependencyInjection
  commentId: N:Microsoft.Extensions.DependencyInjection
  name: Microsoft.Extensions.DependencyInjection
  nameWithType: Microsoft.Extensions.DependencyInjection
  fullName: Microsoft.Extensions.DependencyInjection
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices*
  commentId: Overload:Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices
  name: AddSqlServices
  nameWithType: SqlServiceBuilderExtensions.AddSqlServices
  fullName: Microsoft.Extensions.DependencyInjection.SqlServiceBuilderExtensions.AddSqlServices
- uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
  commentId: T:Microsoft.Extensions.DependencyInjection.IServiceCollection
  parent: Microsoft.Extensions.DependencyInjection
  isExternal: true
  name: IServiceCollection
  nameWithType: IServiceCollection
  fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
