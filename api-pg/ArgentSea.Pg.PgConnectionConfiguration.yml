### YamlMime:ManagedReference
items:
- uid: ArgentSea.Pg.PgConnectionConfiguration
  commentId: T:ArgentSea.Pg.PgConnectionConfiguration
  id: PgConnectionConfiguration
  parent: ArgentSea.Pg
  children:
  - ArgentSea.Pg.PgConnectionConfiguration.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - ArgentSea.Pg.PgConnectionConfiguration.ApplicationName
  - ArgentSea.Pg.PgConnectionConfiguration.AutoPrepareMinUsages
  - ArgentSea.Pg.PgConnectionConfiguration.CheckCertificateRevocation
  - ArgentSea.Pg.PgConnectionConfiguration.ClientEncoding
  - ArgentSea.Pg.PgConnectionConfiguration.CommandTimeout
  - ArgentSea.Pg.PgConnectionConfiguration.ConnectionDescription
  - ArgentSea.Pg.PgConnectionConfiguration.ConnectionIdleLifetime
  - ArgentSea.Pg.PgConnectionConfiguration.ConnectionPruningInterval
  - ArgentSea.Pg.PgConnectionConfiguration.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - ArgentSea.Pg.PgConnectionConfiguration.ContainsKey(System.String)
  - ArgentSea.Pg.PgConnectionConfiguration.ConvertInfinityDateTime
  - ArgentSea.Pg.PgConnectionConfiguration.Database
  - ArgentSea.Pg.PgConnectionConfiguration.Encoding
  - ArgentSea.Pg.PgConnectionConfiguration.Enlist
  - ArgentSea.Pg.PgConnectionConfiguration.GetConnectionString
  - ArgentSea.Pg.PgConnectionConfiguration.Host
  - ArgentSea.Pg.PgConnectionConfiguration.IncludeRealm
  - ArgentSea.Pg.PgConnectionConfiguration.InternalCommandTimeout
  - ArgentSea.Pg.PgConnectionConfiguration.KeepAlive
  - ArgentSea.Pg.PgConnectionConfiguration.KerberosServiceName
  - ArgentSea.Pg.PgConnectionConfiguration.MaxAutoPrepare
  - ArgentSea.Pg.PgConnectionConfiguration.MaxPoolSize
  - ArgentSea.Pg.PgConnectionConfiguration.MinPoolSize
  - ArgentSea.Pg.PgConnectionConfiguration.NoResetOnClose
  - ArgentSea.Pg.PgConnectionConfiguration.PersistSecurityInfo
  - ArgentSea.Pg.PgConnectionConfiguration.Pooling
  - ArgentSea.Pg.PgConnectionConfiguration.Port
  - ArgentSea.Pg.PgConnectionConfiguration.ReadBufferSize
  - ArgentSea.Pg.PgConnectionConfiguration.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  - ArgentSea.Pg.PgConnectionConfiguration.Remove(System.String)
  - ArgentSea.Pg.PgConnectionConfiguration.SearchPath
  - ArgentSea.Pg.PgConnectionConfiguration.ServerCompatibilityMode
  - ArgentSea.Pg.PgConnectionConfiguration.SocketReceiveBufferSize
  - ArgentSea.Pg.PgConnectionConfiguration.SocketSendBufferSize
  - ArgentSea.Pg.PgConnectionConfiguration.SslMode
  - ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveInterval
  - ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveTime
  - ArgentSea.Pg.PgConnectionConfiguration.Timeout
  - ArgentSea.Pg.PgConnectionConfiguration.TrustServerCertificate
  - ArgentSea.Pg.PgConnectionConfiguration.TryGetValue(System.String,System.Object@)
  - ArgentSea.Pg.PgConnectionConfiguration.UsePerfCounters
  - ArgentSea.Pg.PgConnectionConfiguration.UseSslStream
  - ArgentSea.Pg.PgConnectionConfiguration.WriteBufferSize
  langs:
  - csharp
  - vb
  name: PgConnectionConfiguration
  nameWithType: PgConnectionConfiguration
  fullName: ArgentSea.Pg.PgConnectionConfiguration
  type: Class
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: PgConnectionConfiguration
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 16
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThis class represents is a (non-sharded) database connection.\nNote that the SecurityKey must match a defined key in the DataSecurityOptions; likewise, a ResilienceKey (if defined) must match as key in the DataResilienceOptions array.\nIf the ResilienceKey is not defined, a default data resilience strategy will be used.\n"
  example: []
  syntax:
    content: 'public class PgConnectionConfiguration : DataConnectionConfigurationBase, IConnectionConfiguration'
    content.vb: >-
      Public Class PgConnectionConfiguration
          Inherits DataConnectionConfigurationBase
          Implements IConnectionConfiguration
  inheritance:
  - System.Object
  - ArgentSea.DataConnectionConfigurationBase
  implements:
  - ArgentSea.IConnectionConfiguration
  inheritedMembers:
  - ArgentSea.DataConnectionConfigurationBase.hasConnectionPropertyChanged
  - ArgentSea.DataConnectionConfigurationBase.SetConfigurationOptions(ArgentSea.DataSecurityOptions,ArgentSea.DataResilienceOptions)
  - ArgentSea.DataConnectionConfigurationBase.GetResilienceStrategy(Microsoft.Extensions.Logging.ILogger)
  - ArgentSea.DataConnectionConfigurationBase.GetSecurityConfiguration
  - ArgentSea.DataConnectionConfigurationBase.SecurityKey
  - ArgentSea.DataConnectionConfigurationBase.ResilienceKey
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ArgentSea.Pg.PgConnectionConfiguration.ConnectionDescription
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.ConnectionDescription
  id: ConnectionDescription
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ConnectionDescription
  nameWithType: PgConnectionConfiguration.ConnectionDescription
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ConnectionDescription
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: ConnectionDescription
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 22
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  syntax:
    content: public override string ConnectionDescription { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overrides ReadOnly Property ConnectionDescription As String
  overridden: ArgentSea.DataConnectionConfigurationBase.ConnectionDescription
  overload: ArgentSea.Pg.PgConnectionConfiguration.ConnectionDescription*
  modifiers.csharp:
  - public
  - override
  - get
  modifiers.vb:
  - Public
  - Overrides
  - ReadOnly
- uid: ArgentSea.Pg.PgConnectionConfiguration.GetConnectionString
  commentId: M:ArgentSea.Pg.PgConnectionConfiguration.GetConnectionString
  id: GetConnectionString
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: GetConnectionString()
  nameWithType: PgConnectionConfiguration.GetConnectionString()
  fullName: ArgentSea.Pg.PgConnectionConfiguration.GetConnectionString()
  type: Method
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: GetConnectionString
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 27
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  syntax:
    content: public override string GetConnectionString()
    return:
      type: System.String
    content.vb: Public Overrides Function GetConnectionString As String
  overridden: ArgentSea.DataConnectionConfigurationBase.GetConnectionString
  overload: ArgentSea.Pg.PgConnectionConfiguration.GetConnectionString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: ArgentSea.Pg.PgConnectionConfiguration.ApplicationName
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.ApplicationName
  id: ApplicationName
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ApplicationName
  nameWithType: PgConnectionConfiguration.ApplicationName
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ApplicationName
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: ApplicationName
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 53
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe optional application name parameter to be sent to the backend during connection initiation.\n"
  example: []
  syntax:
    content: public string ApplicationName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApplicationName As String
  overload: ArgentSea.Pg.PgConnectionConfiguration.ApplicationName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.AutoPrepareMinUsages
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.AutoPrepareMinUsages
  id: AutoPrepareMinUsages
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: AutoPrepareMinUsages
  nameWithType: PgConnectionConfiguration.AutoPrepareMinUsages
  fullName: ArgentSea.Pg.PgConnectionConfiguration.AutoPrepareMinUsages
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: AutoPrepareMinUsages
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 65
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe minimum number of usages an SQL statement is used before it&apos;s automatically prepared. Defaults to 5\n"
  example: []
  syntax:
    content: public int AutoPrepareMinUsages { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AutoPrepareMinUsages As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.AutoPrepareMinUsages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.CheckCertificateRevocation
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.CheckCertificateRevocation
  id: CheckCertificateRevocation
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: CheckCertificateRevocation
  nameWithType: PgConnectionConfiguration.CheckCertificateRevocation
  fullName: ArgentSea.Pg.PgConnectionConfiguration.CheckCertificateRevocation
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: CheckCertificateRevocation
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 77
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nWhether to check the certificate revocation list during authentication. False by default.\n"
  example: []
  syntax:
    content: public bool CheckCertificateRevocation { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property CheckCertificateRevocation As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.CheckCertificateRevocation*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.ClientEncoding
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.ClientEncoding
  id: ClientEncoding
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ClientEncoding
  nameWithType: PgConnectionConfiguration.ClientEncoding
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ClientEncoding
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: ClientEncoding
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 89
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nGets or sets the client_encoding parameter.\n"
  example: []
  syntax:
    content: public string ClientEncoding { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientEncoding As String
  overload: ArgentSea.Pg.PgConnectionConfiguration.ClientEncoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.CommandTimeout
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.CommandTimeout
  id: CommandTimeout
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: CommandTimeout
  nameWithType: PgConnectionConfiguration.CommandTimeout
  fullName: ArgentSea.Pg.PgConnectionConfiguration.CommandTimeout
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: CommandTimeout
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 101
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe time to wait (in seconds) while trying to execute a command before terminating the attempt and generating an error. Defaults to 30 seconds.\n"
  example: []
  syntax:
    content: public int CommandTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property CommandTimeout As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.CommandTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.ConnectionIdleLifetime
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.ConnectionIdleLifetime
  id: ConnectionIdleLifetime
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ConnectionIdleLifetime
  nameWithType: PgConnectionConfiguration.ConnectionIdleLifetime
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ConnectionIdleLifetime
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: ConnectionIdleLifetime
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 113
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe time to wait before closing idle connections in the pool if the count of all connections exceeds MinPoolSize.\n"
  example: []
  syntax:
    content: public int ConnectionIdleLifetime { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ConnectionIdleLifetime As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.ConnectionIdleLifetime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.ConnectionPruningInterval
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.ConnectionPruningInterval
  id: ConnectionPruningInterval
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ConnectionPruningInterval
  nameWithType: PgConnectionConfiguration.ConnectionPruningInterval
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ConnectionPruningInterval
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: ConnectionPruningInterval
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 125
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nHow many seconds the pool waits before attempting to prune idle connections that are beyond idle lifetime.\n"
  example: []
  syntax:
    content: public int ConnectionPruningInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ConnectionPruningInterval As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.ConnectionPruningInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.ConvertInfinityDateTime
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.ConvertInfinityDateTime
  id: ConvertInfinityDateTime
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ConvertInfinityDateTime
  nameWithType: PgConnectionConfiguration.ConvertInfinityDateTime
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ConvertInfinityDateTime
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: ConvertInfinityDateTime
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 137
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nMakes MaxValue and MinValue timestamps and dates readable as infinity and negative infinity.\n"
  example: []
  syntax:
    content: public bool ConvertInfinityDateTime { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property ConvertInfinityDateTime As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.ConvertInfinityDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.Database
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.Database
  id: Database
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Database
  nameWithType: PgConnectionConfiguration.Database
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Database
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: Database
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 149
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe PostgreSQL database to connect to.\n"
  example: []
  syntax:
    content: public string Database { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Database As String
  overload: ArgentSea.Pg.PgConnectionConfiguration.Database*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.Encoding
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.Encoding
  id: Encoding
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Encoding
  nameWithType: PgConnectionConfiguration.Encoding
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Encoding
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: Encoding
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 161
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nGets or sets the .NET encoding that will be used to encode/decode PostgreSQL string data.\n"
  example: []
  syntax:
    content: public string Encoding { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Encoding As String
  overload: ArgentSea.Pg.PgConnectionConfiguration.Encoding*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.Enlist
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.Enlist
  id: Enlist
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Enlist
  nameWithType: PgConnectionConfiguration.Enlist
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Enlist
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: Enlist
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 173
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nWhether to enlist in an ambient TransactionScope.\n"
  example: []
  syntax:
    content: public bool Enlist { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Enlist As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.Enlist*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.Host
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.Host
  id: Host
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: PgConnectionConfiguration.Host
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Host
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: Host
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 185
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe hostname or IP address of the PostgreSQL server to connect to.\n"
  example: []
  syntax:
    content: public string Host { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Host As String
  overload: ArgentSea.Pg.PgConnectionConfiguration.Host*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.IncludeRealm
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.IncludeRealm
  id: IncludeRealm
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: IncludeRealm
  nameWithType: PgConnectionConfiguration.IncludeRealm
  fullName: ArgentSea.Pg.PgConnectionConfiguration.IncludeRealm
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: IncludeRealm
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 197
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe Kerberos realm to be used for authentication\n"
  example: []
  syntax:
    content: public bool IncludeRealm { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IncludeRealm As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.IncludeRealm*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.InternalCommandTimeout
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.InternalCommandTimeout
  id: InternalCommandTimeout
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: InternalCommandTimeout
  nameWithType: PgConnectionConfiguration.InternalCommandTimeout
  fullName: ArgentSea.Pg.PgConnectionConfiguration.InternalCommandTimeout
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: InternalCommandTimeout
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 209
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe time to wait (in seconds) while trying to execute a an internal command before terminating the attempt and generating an error.\n"
  example: []
  syntax:
    content: public int InternalCommandTimeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property InternalCommandTimeout As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.InternalCommandTimeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.KeepAlive
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.KeepAlive
  id: KeepAlive
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: KeepAlive
  nameWithType: PgConnectionConfiguration.KeepAlive
  fullName: ArgentSea.Pg.PgConnectionConfiguration.KeepAlive
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: KeepAlive
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 221
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe number of seconds of connection inactivity before Npgsql sends a keepalive query. Set to 0 (the default) to disable.\n"
  example: []
  syntax:
    content: public int KeepAlive { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property KeepAlive As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.KeepAlive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.KerberosServiceName
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.KerberosServiceName
  id: KerberosServiceName
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: KerberosServiceName
  nameWithType: PgConnectionConfiguration.KerberosServiceName
  fullName: ArgentSea.Pg.PgConnectionConfiguration.KerberosServiceName
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: KerberosServiceName
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 233
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe Kerberos service name to be used for authentication.\n"
  example: []
  syntax:
    content: public string KerberosServiceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property KerberosServiceName As String
  overload: ArgentSea.Pg.PgConnectionConfiguration.KerberosServiceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.MaxAutoPrepare
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.MaxAutoPrepare
  id: MaxAutoPrepare
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: MaxAutoPrepare
  nameWithType: PgConnectionConfiguration.MaxAutoPrepare
  fullName: ArgentSea.Pg.PgConnectionConfiguration.MaxAutoPrepare
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: MaxAutoPrepare
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 245
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe maximum number SQL statements that can be automatically prepared at any given point. Beyond this number the least-recently-used statement will be recycled. Zero (the default) disables automatic preparation.\n"
  example: []
  syntax:
    content: public int MaxAutoPrepare { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxAutoPrepare As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.MaxAutoPrepare*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.MaxPoolSize
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.MaxPoolSize
  id: MaxPoolSize
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: MaxPoolSize
  nameWithType: PgConnectionConfiguration.MaxPoolSize
  fullName: ArgentSea.Pg.PgConnectionConfiguration.MaxPoolSize
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: MaxPoolSize
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 257
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe maximum connection pool size.\n"
  example: []
  syntax:
    content: public int MaxPoolSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MaxPoolSize As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.MaxPoolSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.MinPoolSize
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.MinPoolSize
  id: MinPoolSize
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: MinPoolSize
  nameWithType: PgConnectionConfiguration.MinPoolSize
  fullName: ArgentSea.Pg.PgConnectionConfiguration.MinPoolSize
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: MinPoolSize
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 269
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe minimum connection pool size.\n"
  example: []
  syntax:
    content: public int MinPoolSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MinPoolSize As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.MinPoolSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.NoResetOnClose
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.NoResetOnClose
  id: NoResetOnClose
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: NoResetOnClose
  nameWithType: PgConnectionConfiguration.NoResetOnClose
  fullName: ArgentSea.Pg.PgConnectionConfiguration.NoResetOnClose
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: NoResetOnClose
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 281
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nIf set to true, a pool connection&apos;s state won&apos;t be reset when it is closed (improves performance). Do not specify this unless you know what you&apos;re doing.\n"
  example: []
  syntax:
    content: public bool NoResetOnClose { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property NoResetOnClose As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.NoResetOnClose*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.PersistSecurityInfo
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.PersistSecurityInfo
  id: PersistSecurityInfo
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: PersistSecurityInfo
  nameWithType: PgConnectionConfiguration.PersistSecurityInfo
  fullName: ArgentSea.Pg.PgConnectionConfiguration.PersistSecurityInfo
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: PersistSecurityInfo
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 293
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nGets or sets a Boolean value that indicates if security-sensitive information, such as the password, is not returned as part of the connection if the connection is open or has ever been in an open state.\n"
  example: []
  syntax:
    content: public bool PersistSecurityInfo { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PersistSecurityInfo As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.PersistSecurityInfo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.Pooling
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.Pooling
  id: Pooling
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Pooling
  nameWithType: PgConnectionConfiguration.Pooling
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Pooling
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: Pooling
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 305
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nWhether connection pooling should be used.\n"
  example: []
  syntax:
    content: public bool Pooling { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Pooling As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.Pooling*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.Port
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.Port
  id: Port
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Port
  nameWithType: PgConnectionConfiguration.Port
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Port
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: Port
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 317
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe TCP/IP port of the PostgreSQL server.\n"
  example: []
  syntax:
    content: public int Port { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Port As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.Port*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.ReadBufferSize
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.ReadBufferSize
  id: ReadBufferSize
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ReadBufferSize
  nameWithType: PgConnectionConfiguration.ReadBufferSize
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ReadBufferSize
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: ReadBufferSize
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 329
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nDetermines the size of the internal buffer Npgsql uses when reading. Increasing may improve performance if transferring large values from the database.\n"
  example: []
  syntax:
    content: public int ReadBufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ReadBufferSize As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.ReadBufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.SearchPath
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.SearchPath
  id: SearchPath
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: SearchPath
  nameWithType: PgConnectionConfiguration.SearchPath
  fullName: ArgentSea.Pg.PgConnectionConfiguration.SearchPath
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: SearchPath
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 341
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nGets or sets the schema search path.\n"
  example: []
  syntax:
    content: public string SearchPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SearchPath As String
  overload: ArgentSea.Pg.PgConnectionConfiguration.SearchPath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.ServerCompatibilityMode
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.ServerCompatibilityMode
  id: ServerCompatibilityMode
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ServerCompatibilityMode
  nameWithType: PgConnectionConfiguration.ServerCompatibilityMode
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ServerCompatibilityMode
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: ServerCompatibilityMode
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 353
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nA compatibility mode for special PostgreSQL server types.\n"
  example: []
  syntax:
    content: public ServerCompatibilityMode ServerCompatibilityMode { get; set; }
    parameters: []
    return:
      type: Npgsql.ServerCompatibilityMode
    content.vb: Public Property ServerCompatibilityMode As ServerCompatibilityMode
  overload: ArgentSea.Pg.PgConnectionConfiguration.ServerCompatibilityMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.SocketReceiveBufferSize
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.SocketReceiveBufferSize
  id: SocketReceiveBufferSize
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: SocketReceiveBufferSize
  nameWithType: PgConnectionConfiguration.SocketReceiveBufferSize
  fullName: ArgentSea.Pg.PgConnectionConfiguration.SocketReceiveBufferSize
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: SocketReceiveBufferSize
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 365
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nDetermines the size of socket read buffer.\n"
  example: []
  syntax:
    content: public int SocketReceiveBufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SocketReceiveBufferSize As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.SocketReceiveBufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.SocketSendBufferSize
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.SocketSendBufferSize
  id: SocketSendBufferSize
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: SocketSendBufferSize
  nameWithType: PgConnectionConfiguration.SocketSendBufferSize
  fullName: ArgentSea.Pg.PgConnectionConfiguration.SocketSendBufferSize
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: SocketSendBufferSize
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 377
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nDetermines the size of socket send buffer.\n"
  example: []
  syntax:
    content: public int SocketSendBufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SocketSendBufferSize As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.SocketSendBufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.SslMode
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.SslMode
  id: SslMode
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: SslMode
  nameWithType: PgConnectionConfiguration.SslMode
  fullName: ArgentSea.Pg.PgConnectionConfiguration.SslMode
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: SslMode
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 389
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nControls whether SSL is required, disabled or preferred, depending on server support.\n"
  example: []
  syntax:
    content: public SslMode SslMode { get; set; }
    parameters: []
    return:
      type: Npgsql.SslMode
    content.vb: Public Property SslMode As SslMode
  overload: ArgentSea.Pg.PgConnectionConfiguration.SslMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveInterval
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveInterval
  id: TcpKeepAliveInterval
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: TcpKeepAliveInterval
  nameWithType: PgConnectionConfiguration.TcpKeepAliveInterval
  fullName: ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveInterval
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: TcpKeepAliveInterval
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 401
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe interval, in milliseconds, between when successive keep-alive packets are sent if no acknowledgement is received. Defaults to the value of TcpKeepAliveTime. TcpKeepAliveTime must be non-zero as well. Supported only on Windows.\n"
  example: []
  syntax:
    content: public int TcpKeepAliveInterval { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TcpKeepAliveInterval As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveInterval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveTime
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveTime
  id: TcpKeepAliveTime
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: TcpKeepAliveTime
  nameWithType: PgConnectionConfiguration.TcpKeepAliveTime
  fullName: ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveTime
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: TcpKeepAliveTime
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 413
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe number of seconds of connection inactivity before a TCP keepalive query is sent. Use of this option is discouraged, use KeepAlive instead if possible. Set to 0 (the default) to disable. Supported only on Windows.\n"
  example: []
  syntax:
    content: public int TcpKeepAliveTime { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TcpKeepAliveTime As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.Timeout
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.Timeout
  id: Timeout
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Timeout
  nameWithType: PgConnectionConfiguration.Timeout
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Timeout
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: Timeout
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 425
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nThe time to wait (in seconds) while trying to establish a connection before terminating the attempt and generating an error. Defaults to 15 seconds.\n"
  example: []
  syntax:
    content: public int Timeout { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Timeout As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.Timeout*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.TrustServerCertificate
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.TrustServerCertificate
  id: TrustServerCertificate
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: TrustServerCertificate
  nameWithType: PgConnectionConfiguration.TrustServerCertificate
  fullName: ArgentSea.Pg.PgConnectionConfiguration.TrustServerCertificate
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: TrustServerCertificate
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 437
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nWhether to trust the server certificate without validating it.\n"
  example: []
  syntax:
    content: public bool TrustServerCertificate { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property TrustServerCertificate As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.TrustServerCertificate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.UsePerfCounters
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.UsePerfCounters
  id: UsePerfCounters
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: UsePerfCounters
  nameWithType: PgConnectionConfiguration.UsePerfCounters
  fullName: ArgentSea.Pg.PgConnectionConfiguration.UsePerfCounters
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: UsePerfCounters
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 450
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nWrites connection performance information to performance counters.\n"
  example: []
  syntax:
    content: public bool UsePerfCounters { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UsePerfCounters As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.UsePerfCounters*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.UseSslStream
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.UseSslStream
  id: UseSslStream
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: UseSslStream
  nameWithType: PgConnectionConfiguration.UseSslStream
  fullName: ArgentSea.Pg.PgConnectionConfiguration.UseSslStream
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: UseSslStream
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 462
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nNpgsql uses its own internal implementation of TLS/SSL. Turn this on to use .NET SslStream instead.\n"
  example: []
  syntax:
    content: public bool UseSslStream { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseSslStream As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.UseSslStream*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.WriteBufferSize
  commentId: P:ArgentSea.Pg.PgConnectionConfiguration.WriteBufferSize
  id: WriteBufferSize
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: WriteBufferSize
  nameWithType: PgConnectionConfiguration.WriteBufferSize
  fullName: ArgentSea.Pg.PgConnectionConfiguration.WriteBufferSize
  type: Property
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: WriteBufferSize
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 475
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nDetermines the size of the internal buffer Npgsql uses when writing. Increasing may improve performance if transferring large values to the database.\n"
  example: []
  syntax:
    content: public int WriteBufferSize { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property WriteBufferSize As Integer
  overload: ArgentSea.Pg.PgConnectionConfiguration.WriteBufferSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:ArgentSea.Pg.PgConnectionConfiguration.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Add(KeyValuePair<String, Object>)
  nameWithType: PgConnectionConfiguration.Add(KeyValuePair<String, Object>)
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Add(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: Add
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 489
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nAdds an item to the configuration\n"
  example: []
  syntax:
    content: public void Add(KeyValuePair<string, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
      description: ''
    content.vb: Public Sub Add(item As KeyValuePair(Of String, Object))
  overload: ArgentSea.Pg.PgConnectionConfiguration.Add*
  nameWithType.vb: PgConnectionConfiguration.Add(KeyValuePair(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ArgentSea.Pg.PgConnectionConfiguration.Add(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Add(KeyValuePair(Of String, Object))
- uid: ArgentSea.Pg.PgConnectionConfiguration.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:ArgentSea.Pg.PgConnectionConfiguration.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Contains(KeyValuePair<String, Object>)
  nameWithType: PgConnectionConfiguration.Contains(KeyValuePair<String, Object>)
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Contains(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: Contains
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 496
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nDetermines whether the configuration contains a specific key-value pair.\n"
  example: []
  syntax:
    content: public bool Contains(KeyValuePair<string, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
    return:
      type: System.Boolean
    content.vb: Public Function Contains(item As KeyValuePair(Of String, Object)) As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.Contains*
  nameWithType.vb: PgConnectionConfiguration.Contains(KeyValuePair(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ArgentSea.Pg.PgConnectionConfiguration.Contains(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Contains(KeyValuePair(Of String, Object))
- uid: ArgentSea.Pg.PgConnectionConfiguration.ContainsKey(System.String)
  commentId: M:ArgentSea.Pg.PgConnectionConfiguration.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: ContainsKey(String)
  nameWithType: PgConnectionConfiguration.ContainsKey(String)
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ContainsKey(System.String)
  type: Method
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: ContainsKey
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 503
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nDetermines whether the configuration contains a specific key.\n"
  example: []
  syntax:
    content: public bool ContainsKey(string key)
    parameters:
    - id: key
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function ContainsKey(key As String) As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.ContainsKey*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  commentId: M:ArgentSea.Pg.PgConnectionConfiguration.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  id: Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Remove(KeyValuePair<String, Object>)
  nameWithType: PgConnectionConfiguration.Remove(KeyValuePair<String, Object>)
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Remove(System.Collections.Generic.KeyValuePair<System.String, System.Object>)
  type: Method
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: Remove
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 512
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nRemoves the entry from the configuration instance.\n"
  example: []
  syntax:
    content: public void Remove(KeyValuePair<string, object> item)
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{System.String,System.Object}
    content.vb: Public Sub Remove(item As KeyValuePair(Of String, Object))
  overload: ArgentSea.Pg.PgConnectionConfiguration.Remove*
  nameWithType.vb: PgConnectionConfiguration.Remove(KeyValuePair(Of String, Object))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ArgentSea.Pg.PgConnectionConfiguration.Remove(System.Collections.Generic.KeyValuePair(Of System.String, System.Object))
  name.vb: Remove(KeyValuePair(Of String, Object))
- uid: ArgentSea.Pg.PgConnectionConfiguration.Remove(System.String)
  commentId: M:ArgentSea.Pg.PgConnectionConfiguration.Remove(System.String)
  id: Remove(System.String)
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: Remove(String)
  nameWithType: PgConnectionConfiguration.Remove(String)
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Remove(System.String)
  type: Method
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: Remove
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 520
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  summary: "\nRemoves the entry from the configuration instance.\n"
  example: []
  syntax:
    content: public void Remove(string key)
    parameters:
    - id: key
      type: System.String
    content.vb: Public Sub Remove(key As String)
  overload: ArgentSea.Pg.PgConnectionConfiguration.Remove*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ArgentSea.Pg.PgConnectionConfiguration.TryGetValue(System.String,System.Object@)
  commentId: M:ArgentSea.Pg.PgConnectionConfiguration.TryGetValue(System.String,System.Object@)
  id: TryGetValue(System.String,System.Object@)
  parent: ArgentSea.Pg.PgConnectionConfiguration
  langs:
  - csharp
  - vb
  name: TryGetValue(String, out Object)
  nameWithType: PgConnectionConfiguration.TryGetValue(String, out Object)
  fullName: ArgentSea.Pg.PgConnectionConfiguration.TryGetValue(System.String, out System.Object)
  type: Method
  source:
    remote:
      path: src/PgConnectionConfiguration.cs
      branch: master
      repo: https://github.com/argentsea/pg.git
    id: TryGetValue
    path: ../ArgentSea.Pg/src/PgConnectionConfiguration.cs
    startLine: 525
  assemblies:
  - ArgentSea.Pg
  namespace: ArgentSea.Pg
  syntax:
    content: public bool TryGetValue(string key, out object value)
    parameters:
    - id: key
      type: System.String
    - id: value
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Function TryGetValue(key As String, ByRef value As Object) As Boolean
  overload: ArgentSea.Pg.PgConnectionConfiguration.TryGetValue*
  nameWithType.vb: PgConnectionConfiguration.TryGetValue(String, ByRef Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: ArgentSea.Pg.PgConnectionConfiguration.TryGetValue(System.String, ByRef System.Object)
  name.vb: TryGetValue(String, ByRef Object)
references:
- uid: ArgentSea.Pg
  commentId: N:ArgentSea.Pg
  name: ArgentSea.Pg
  nameWithType: ArgentSea.Pg
  fullName: ArgentSea.Pg
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: ArgentSea.DataConnectionConfigurationBase
  commentId: T:ArgentSea.DataConnectionConfigurationBase
  parent: ArgentSea
  name: DataConnectionConfigurationBase
  nameWithType: DataConnectionConfigurationBase
  fullName: ArgentSea.DataConnectionConfigurationBase
- uid: ArgentSea.IConnectionConfiguration
  commentId: T:ArgentSea.IConnectionConfiguration
  parent: ArgentSea
  name: IConnectionConfiguration
  nameWithType: IConnectionConfiguration
  fullName: ArgentSea.IConnectionConfiguration
- uid: ArgentSea.DataConnectionConfigurationBase.hasConnectionPropertyChanged
  commentId: F:ArgentSea.DataConnectionConfigurationBase.hasConnectionPropertyChanged
  parent: ArgentSea.DataConnectionConfigurationBase
  name: hasConnectionPropertyChanged
  nameWithType: DataConnectionConfigurationBase.hasConnectionPropertyChanged
  fullName: ArgentSea.DataConnectionConfigurationBase.hasConnectionPropertyChanged
- uid: ArgentSea.DataConnectionConfigurationBase.SetConfigurationOptions(ArgentSea.DataSecurityOptions,ArgentSea.DataResilienceOptions)
  commentId: M:ArgentSea.DataConnectionConfigurationBase.SetConfigurationOptions(ArgentSea.DataSecurityOptions,ArgentSea.DataResilienceOptions)
  parent: ArgentSea.DataConnectionConfigurationBase
  name: SetConfigurationOptions(DataSecurityOptions, DataResilienceOptions)
  nameWithType: DataConnectionConfigurationBase.SetConfigurationOptions(DataSecurityOptions, DataResilienceOptions)
  fullName: ArgentSea.DataConnectionConfigurationBase.SetConfigurationOptions(ArgentSea.DataSecurityOptions, ArgentSea.DataResilienceOptions)
  spec.csharp:
  - uid: ArgentSea.DataConnectionConfigurationBase.SetConfigurationOptions(ArgentSea.DataSecurityOptions,ArgentSea.DataResilienceOptions)
    name: SetConfigurationOptions
    nameWithType: DataConnectionConfigurationBase.SetConfigurationOptions
    fullName: ArgentSea.DataConnectionConfigurationBase.SetConfigurationOptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: ArgentSea.DataSecurityOptions
    name: DataSecurityOptions
    nameWithType: DataSecurityOptions
    fullName: ArgentSea.DataSecurityOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ArgentSea.DataResilienceOptions
    name: DataResilienceOptions
    nameWithType: DataResilienceOptions
    fullName: ArgentSea.DataResilienceOptions
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ArgentSea.DataConnectionConfigurationBase.SetConfigurationOptions(ArgentSea.DataSecurityOptions,ArgentSea.DataResilienceOptions)
    name: SetConfigurationOptions
    nameWithType: DataConnectionConfigurationBase.SetConfigurationOptions
    fullName: ArgentSea.DataConnectionConfigurationBase.SetConfigurationOptions
  - name: (
    nameWithType: (
    fullName: (
  - uid: ArgentSea.DataSecurityOptions
    name: DataSecurityOptions
    nameWithType: DataSecurityOptions
    fullName: ArgentSea.DataSecurityOptions
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: ArgentSea.DataResilienceOptions
    name: DataResilienceOptions
    nameWithType: DataResilienceOptions
    fullName: ArgentSea.DataResilienceOptions
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea.DataConnectionConfigurationBase.GetResilienceStrategy(Microsoft.Extensions.Logging.ILogger)
  commentId: M:ArgentSea.DataConnectionConfigurationBase.GetResilienceStrategy(Microsoft.Extensions.Logging.ILogger)
  parent: ArgentSea.DataConnectionConfigurationBase
  isExternal: true
  name: GetResilienceStrategy(ILogger)
  nameWithType: DataConnectionConfigurationBase.GetResilienceStrategy(ILogger)
  fullName: ArgentSea.DataConnectionConfigurationBase.GetResilienceStrategy(Microsoft.Extensions.Logging.ILogger)
  spec.csharp:
  - uid: ArgentSea.DataConnectionConfigurationBase.GetResilienceStrategy(Microsoft.Extensions.Logging.ILogger)
    name: GetResilienceStrategy
    nameWithType: DataConnectionConfigurationBase.GetResilienceStrategy
    fullName: ArgentSea.DataConnectionConfigurationBase.GetResilienceStrategy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ArgentSea.DataConnectionConfigurationBase.GetResilienceStrategy(Microsoft.Extensions.Logging.ILogger)
    name: GetResilienceStrategy
    nameWithType: DataConnectionConfigurationBase.GetResilienceStrategy
    fullName: ArgentSea.DataConnectionConfigurationBase.GetResilienceStrategy
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.Extensions.Logging.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: Microsoft.Extensions.Logging.ILogger
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea.DataConnectionConfigurationBase.GetSecurityConfiguration
  commentId: M:ArgentSea.DataConnectionConfigurationBase.GetSecurityConfiguration
  parent: ArgentSea.DataConnectionConfigurationBase
  name: GetSecurityConfiguration()
  nameWithType: DataConnectionConfigurationBase.GetSecurityConfiguration()
  fullName: ArgentSea.DataConnectionConfigurationBase.GetSecurityConfiguration()
  spec.csharp:
  - uid: ArgentSea.DataConnectionConfigurationBase.GetSecurityConfiguration
    name: GetSecurityConfiguration
    nameWithType: DataConnectionConfigurationBase.GetSecurityConfiguration
    fullName: ArgentSea.DataConnectionConfigurationBase.GetSecurityConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ArgentSea.DataConnectionConfigurationBase.GetSecurityConfiguration
    name: GetSecurityConfiguration
    nameWithType: DataConnectionConfigurationBase.GetSecurityConfiguration
    fullName: ArgentSea.DataConnectionConfigurationBase.GetSecurityConfiguration
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea.DataConnectionConfigurationBase.SecurityKey
  commentId: P:ArgentSea.DataConnectionConfigurationBase.SecurityKey
  parent: ArgentSea.DataConnectionConfigurationBase
  name: SecurityKey
  nameWithType: DataConnectionConfigurationBase.SecurityKey
  fullName: ArgentSea.DataConnectionConfigurationBase.SecurityKey
- uid: ArgentSea.DataConnectionConfigurationBase.ResilienceKey
  commentId: P:ArgentSea.DataConnectionConfigurationBase.ResilienceKey
  parent: ArgentSea.DataConnectionConfigurationBase
  name: ResilienceKey
  nameWithType: DataConnectionConfigurationBase.ResilienceKey
  fullName: ArgentSea.DataConnectionConfigurationBase.ResilienceKey
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: ArgentSea
  commentId: N:ArgentSea
  name: ArgentSea
  nameWithType: ArgentSea
  fullName: ArgentSea
- uid: ArgentSea.DataConnectionConfigurationBase.ConnectionDescription
  commentId: P:ArgentSea.DataConnectionConfigurationBase.ConnectionDescription
  parent: ArgentSea.DataConnectionConfigurationBase
  name: ConnectionDescription
  nameWithType: DataConnectionConfigurationBase.ConnectionDescription
  fullName: ArgentSea.DataConnectionConfigurationBase.ConnectionDescription
- uid: ArgentSea.Pg.PgConnectionConfiguration.ConnectionDescription*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.ConnectionDescription
  name: ConnectionDescription
  nameWithType: PgConnectionConfiguration.ConnectionDescription
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ConnectionDescription
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ArgentSea.DataConnectionConfigurationBase.GetConnectionString
  commentId: M:ArgentSea.DataConnectionConfigurationBase.GetConnectionString
  parent: ArgentSea.DataConnectionConfigurationBase
  name: GetConnectionString()
  nameWithType: DataConnectionConfigurationBase.GetConnectionString()
  fullName: ArgentSea.DataConnectionConfigurationBase.GetConnectionString()
  spec.csharp:
  - uid: ArgentSea.DataConnectionConfigurationBase.GetConnectionString
    name: GetConnectionString
    nameWithType: DataConnectionConfigurationBase.GetConnectionString
    fullName: ArgentSea.DataConnectionConfigurationBase.GetConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: ArgentSea.DataConnectionConfigurationBase.GetConnectionString
    name: GetConnectionString
    nameWithType: DataConnectionConfigurationBase.GetConnectionString
    fullName: ArgentSea.DataConnectionConfigurationBase.GetConnectionString
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ArgentSea.Pg.PgConnectionConfiguration.GetConnectionString*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.GetConnectionString
  name: GetConnectionString
  nameWithType: PgConnectionConfiguration.GetConnectionString
  fullName: ArgentSea.Pg.PgConnectionConfiguration.GetConnectionString
- uid: ArgentSea.Pg.PgConnectionConfiguration.ApplicationName*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.ApplicationName
  name: ApplicationName
  nameWithType: PgConnectionConfiguration.ApplicationName
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ApplicationName
- uid: ArgentSea.Pg.PgConnectionConfiguration.AutoPrepareMinUsages*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.AutoPrepareMinUsages
  name: AutoPrepareMinUsages
  nameWithType: PgConnectionConfiguration.AutoPrepareMinUsages
  fullName: ArgentSea.Pg.PgConnectionConfiguration.AutoPrepareMinUsages
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: ArgentSea.Pg.PgConnectionConfiguration.CheckCertificateRevocation*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.CheckCertificateRevocation
  name: CheckCertificateRevocation
  nameWithType: PgConnectionConfiguration.CheckCertificateRevocation
  fullName: ArgentSea.Pg.PgConnectionConfiguration.CheckCertificateRevocation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: ArgentSea.Pg.PgConnectionConfiguration.ClientEncoding*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.ClientEncoding
  name: ClientEncoding
  nameWithType: PgConnectionConfiguration.ClientEncoding
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ClientEncoding
- uid: ArgentSea.Pg.PgConnectionConfiguration.CommandTimeout*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.CommandTimeout
  name: CommandTimeout
  nameWithType: PgConnectionConfiguration.CommandTimeout
  fullName: ArgentSea.Pg.PgConnectionConfiguration.CommandTimeout
- uid: ArgentSea.Pg.PgConnectionConfiguration.ConnectionIdleLifetime*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.ConnectionIdleLifetime
  name: ConnectionIdleLifetime
  nameWithType: PgConnectionConfiguration.ConnectionIdleLifetime
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ConnectionIdleLifetime
- uid: ArgentSea.Pg.PgConnectionConfiguration.ConnectionPruningInterval*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.ConnectionPruningInterval
  name: ConnectionPruningInterval
  nameWithType: PgConnectionConfiguration.ConnectionPruningInterval
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ConnectionPruningInterval
- uid: ArgentSea.Pg.PgConnectionConfiguration.ConvertInfinityDateTime*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.ConvertInfinityDateTime
  name: ConvertInfinityDateTime
  nameWithType: PgConnectionConfiguration.ConvertInfinityDateTime
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ConvertInfinityDateTime
- uid: ArgentSea.Pg.PgConnectionConfiguration.Database*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.Database
  name: Database
  nameWithType: PgConnectionConfiguration.Database
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Database
- uid: ArgentSea.Pg.PgConnectionConfiguration.Encoding*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.Encoding
  name: Encoding
  nameWithType: PgConnectionConfiguration.Encoding
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Encoding
- uid: ArgentSea.Pg.PgConnectionConfiguration.Enlist*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.Enlist
  name: Enlist
  nameWithType: PgConnectionConfiguration.Enlist
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Enlist
- uid: ArgentSea.Pg.PgConnectionConfiguration.Host*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.Host
  name: Host
  nameWithType: PgConnectionConfiguration.Host
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Host
- uid: ArgentSea.Pg.PgConnectionConfiguration.IncludeRealm*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.IncludeRealm
  name: IncludeRealm
  nameWithType: PgConnectionConfiguration.IncludeRealm
  fullName: ArgentSea.Pg.PgConnectionConfiguration.IncludeRealm
- uid: ArgentSea.Pg.PgConnectionConfiguration.InternalCommandTimeout*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.InternalCommandTimeout
  name: InternalCommandTimeout
  nameWithType: PgConnectionConfiguration.InternalCommandTimeout
  fullName: ArgentSea.Pg.PgConnectionConfiguration.InternalCommandTimeout
- uid: ArgentSea.Pg.PgConnectionConfiguration.KeepAlive*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.KeepAlive
  name: KeepAlive
  nameWithType: PgConnectionConfiguration.KeepAlive
  fullName: ArgentSea.Pg.PgConnectionConfiguration.KeepAlive
- uid: ArgentSea.Pg.PgConnectionConfiguration.KerberosServiceName*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.KerberosServiceName
  name: KerberosServiceName
  nameWithType: PgConnectionConfiguration.KerberosServiceName
  fullName: ArgentSea.Pg.PgConnectionConfiguration.KerberosServiceName
- uid: ArgentSea.Pg.PgConnectionConfiguration.MaxAutoPrepare*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.MaxAutoPrepare
  name: MaxAutoPrepare
  nameWithType: PgConnectionConfiguration.MaxAutoPrepare
  fullName: ArgentSea.Pg.PgConnectionConfiguration.MaxAutoPrepare
- uid: ArgentSea.Pg.PgConnectionConfiguration.MaxPoolSize*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.MaxPoolSize
  name: MaxPoolSize
  nameWithType: PgConnectionConfiguration.MaxPoolSize
  fullName: ArgentSea.Pg.PgConnectionConfiguration.MaxPoolSize
- uid: ArgentSea.Pg.PgConnectionConfiguration.MinPoolSize*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.MinPoolSize
  name: MinPoolSize
  nameWithType: PgConnectionConfiguration.MinPoolSize
  fullName: ArgentSea.Pg.PgConnectionConfiguration.MinPoolSize
- uid: ArgentSea.Pg.PgConnectionConfiguration.NoResetOnClose*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.NoResetOnClose
  name: NoResetOnClose
  nameWithType: PgConnectionConfiguration.NoResetOnClose
  fullName: ArgentSea.Pg.PgConnectionConfiguration.NoResetOnClose
- uid: ArgentSea.Pg.PgConnectionConfiguration.PersistSecurityInfo*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.PersistSecurityInfo
  name: PersistSecurityInfo
  nameWithType: PgConnectionConfiguration.PersistSecurityInfo
  fullName: ArgentSea.Pg.PgConnectionConfiguration.PersistSecurityInfo
- uid: ArgentSea.Pg.PgConnectionConfiguration.Pooling*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.Pooling
  name: Pooling
  nameWithType: PgConnectionConfiguration.Pooling
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Pooling
- uid: ArgentSea.Pg.PgConnectionConfiguration.Port*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.Port
  name: Port
  nameWithType: PgConnectionConfiguration.Port
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Port
- uid: ArgentSea.Pg.PgConnectionConfiguration.ReadBufferSize*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.ReadBufferSize
  name: ReadBufferSize
  nameWithType: PgConnectionConfiguration.ReadBufferSize
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ReadBufferSize
- uid: ArgentSea.Pg.PgConnectionConfiguration.SearchPath*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.SearchPath
  name: SearchPath
  nameWithType: PgConnectionConfiguration.SearchPath
  fullName: ArgentSea.Pg.PgConnectionConfiguration.SearchPath
- uid: ArgentSea.Pg.PgConnectionConfiguration.ServerCompatibilityMode*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.ServerCompatibilityMode
  name: ServerCompatibilityMode
  nameWithType: PgConnectionConfiguration.ServerCompatibilityMode
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ServerCompatibilityMode
- uid: Npgsql.ServerCompatibilityMode
  commentId: T:Npgsql.ServerCompatibilityMode
  parent: Npgsql
  isExternal: true
  name: ServerCompatibilityMode
  nameWithType: ServerCompatibilityMode
  fullName: Npgsql.ServerCompatibilityMode
- uid: Npgsql
  commentId: N:Npgsql
  isExternal: true
  name: Npgsql
  nameWithType: Npgsql
  fullName: Npgsql
- uid: ArgentSea.Pg.PgConnectionConfiguration.SocketReceiveBufferSize*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.SocketReceiveBufferSize
  name: SocketReceiveBufferSize
  nameWithType: PgConnectionConfiguration.SocketReceiveBufferSize
  fullName: ArgentSea.Pg.PgConnectionConfiguration.SocketReceiveBufferSize
- uid: ArgentSea.Pg.PgConnectionConfiguration.SocketSendBufferSize*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.SocketSendBufferSize
  name: SocketSendBufferSize
  nameWithType: PgConnectionConfiguration.SocketSendBufferSize
  fullName: ArgentSea.Pg.PgConnectionConfiguration.SocketSendBufferSize
- uid: ArgentSea.Pg.PgConnectionConfiguration.SslMode*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.SslMode
  name: SslMode
  nameWithType: PgConnectionConfiguration.SslMode
  fullName: ArgentSea.Pg.PgConnectionConfiguration.SslMode
- uid: Npgsql.SslMode
  commentId: T:Npgsql.SslMode
  parent: Npgsql
  isExternal: true
  name: SslMode
  nameWithType: SslMode
  fullName: Npgsql.SslMode
- uid: ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveInterval*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveInterval
  name: TcpKeepAliveInterval
  nameWithType: PgConnectionConfiguration.TcpKeepAliveInterval
  fullName: ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveInterval
- uid: ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveTime*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveTime
  name: TcpKeepAliveTime
  nameWithType: PgConnectionConfiguration.TcpKeepAliveTime
  fullName: ArgentSea.Pg.PgConnectionConfiguration.TcpKeepAliveTime
- uid: ArgentSea.Pg.PgConnectionConfiguration.Timeout*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.Timeout
  name: Timeout
  nameWithType: PgConnectionConfiguration.Timeout
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Timeout
- uid: ArgentSea.Pg.PgConnectionConfiguration.TrustServerCertificate*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.TrustServerCertificate
  name: TrustServerCertificate
  nameWithType: PgConnectionConfiguration.TrustServerCertificate
  fullName: ArgentSea.Pg.PgConnectionConfiguration.TrustServerCertificate
- uid: ArgentSea.Pg.PgConnectionConfiguration.UsePerfCounters*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.UsePerfCounters
  name: UsePerfCounters
  nameWithType: PgConnectionConfiguration.UsePerfCounters
  fullName: ArgentSea.Pg.PgConnectionConfiguration.UsePerfCounters
- uid: ArgentSea.Pg.PgConnectionConfiguration.UseSslStream*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.UseSslStream
  name: UseSslStream
  nameWithType: PgConnectionConfiguration.UseSslStream
  fullName: ArgentSea.Pg.PgConnectionConfiguration.UseSslStream
- uid: ArgentSea.Pg.PgConnectionConfiguration.WriteBufferSize*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.WriteBufferSize
  name: WriteBufferSize
  nameWithType: PgConnectionConfiguration.WriteBufferSize
  fullName: ArgentSea.Pg.PgConnectionConfiguration.WriteBufferSize
- uid: ArgentSea.Pg.PgConnectionConfiguration.Add*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.Add
  name: Add
  nameWithType: PgConnectionConfiguration.Add
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Add
- uid: System.Collections.Generic.KeyValuePair{System.String,System.Object}
  commentId: T:System.Collections.Generic.KeyValuePair{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<String, Object>
  nameWithType: KeyValuePair<String, Object>
  fullName: System.Collections.Generic.KeyValuePair<System.String, System.Object>
  nameWithType.vb: KeyValuePair(Of String, Object)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of System.String, System.Object)
  name.vb: KeyValuePair(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: ArgentSea.Pg.PgConnectionConfiguration.Contains*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.Contains
  name: Contains
  nameWithType: PgConnectionConfiguration.Contains
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Contains
- uid: ArgentSea.Pg.PgConnectionConfiguration.ContainsKey*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.ContainsKey
  name: ContainsKey
  nameWithType: PgConnectionConfiguration.ContainsKey
  fullName: ArgentSea.Pg.PgConnectionConfiguration.ContainsKey
- uid: ArgentSea.Pg.PgConnectionConfiguration.Remove*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.Remove
  name: Remove
  nameWithType: PgConnectionConfiguration.Remove
  fullName: ArgentSea.Pg.PgConnectionConfiguration.Remove
- uid: ArgentSea.Pg.PgConnectionConfiguration.TryGetValue*
  commentId: Overload:ArgentSea.Pg.PgConnectionConfiguration.TryGetValue
  name: TryGetValue
  nameWithType: PgConnectionConfiguration.TryGetValue
  fullName: ArgentSea.Pg.PgConnectionConfiguration.TryGetValue
